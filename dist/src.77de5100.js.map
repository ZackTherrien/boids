{"version":3,"sources":["../node_modules/@zacktherrien/typescript-render-engine/dist/types.js","../node_modules/@zacktherrien/typescript-render-engine/dist/Engine/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/RenderingLayer/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/index.js","Boids/constants.ts","Boids/Vector2D/index.ts","Boids/helpers.ts","Boids/Bird/index.ts","Boids/index.ts","index.ts"],"names":[],"mappings":"ACAA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA,AIJa,OAAA,CAAA,UAAA,GAAa,EAAb;AHKb,ACAA,ACAA,AHAA,AIHa,AEEA,OFFA,AEEA,CFFA,AEEA,UFFA,AEEA,GFFa,AEEA,EFFb,QEEc,MAAD,EAAmB;ALE7C,ACAA,ACAA,AHAA,AIHa,AEET,OFFS,CAAA,CEEF,MAAM,GAAG,CFFP,GAAc,AEEH,CAAC,CFFZ,CEEF,GAAmB,GAA1B;ALEJ,ACAA,ACAA,AHAA,AIHa,AEEZ,CAFY,MFAA,CAAA,UAAA,GAAa,MAAM,IAAnB;AHIb,ACAA,ACAA,AHAA,AIFA,IAAY,UAAZ;AHGA,ACAA,ACAA,AHAA,AMDa,OAAA,CAAA,UAAA,GAAa,UAAC,MAAD,EAAmB,KAAnB,EAAqC,SAArC,EAAoF;ALE9G,ACAA,ACAA,AHAA,AIJA,AEGI,CFHJ,KEGQ,KFHI,CEGE,GAAG,CAAb,KFHJ,EAAsB;AHKtB,ACAA,ACAA,AHAA,AIJI,AKRJ,ELQI,ECRiB,AIArB,OAAA,CLQI,CAAA,CKRJ,SLQI,CAAA,KKRJ,CAAA,MLQI,CAAA,AKRJ,CAAA,ELQI,CAAA,CAAA,GAAA,EKRJ,CAAA,CAAA,QLQI;AHKJ,ACAA,ACAA,AERI,ADIA,AEEA,EFFA,IEEI,KAAK,CFFT,CAAA,GEEc,GAAV,GDNsC,CDI1C,AEEqB,CFFrB,OAAA,CAAA,AEE8B,GFF9B,CAAA,CAAA,AEEmC,GFFnC,GEEA,EAA2C,EFF3C;AHKJ,ACAA,AGT8C,ADK7C,AEEO,AGVR,CLKA,EAAY,CEKJ,IDPQ,CIHP,CJGqC,ACOhC,GFLQ,AEKL,AGVjB,CHUQ,EFLI,AKLC,OLKD,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ,kBCF6B,CAAiB;AJU9C,ACAA,AGV8C,ACQzC,AGVD,GHQA,GGRM,EJEsB,CCQrB,CDRmC,CIF/B,EHUA,CGVG,IHUE,AGVE,KHUG,EGVH,CHUP,AGVO,IHUU,GGVd,EAAd,IHUqC,KAAK,OAAnC,EAA4C,4BDRV,CAAC;AJW9C,ACAA,AENC,AEIO,AGTJ,EAAA,EHSI,IGTE,CAAC,CHSG,GAAG,CGTb,GHSiB,AGTF,CHSG,EAAd,EGTJ;ARYJ,ACAA,AGZ8C,ACUzC,AGTJ,GHOU,MAEA,IAAI,KAAK,KAAK,GAAV,IAAiB,SAAS,KAAK,IAAnC,EAAyC;ALGpD,ACAA,AKhBA,ADcQ,ICdR,ADcQ,MAAM,GAAG,CCdjB,GAAA,ADcqB,CAAC,EAAL,GAAQ,GAAjB,MCdR,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;ANiBA,ACAA,AGbQ,ACWH,AGTL,GHOW,GGPL,CAAC,EJFM,ACWF,EDXH,ECWO,CDXG,EAAV,ECWY,KAAK,AGTzB,CAAwB,EHST,IAAiB,AGThC,EAAgC,IAAhC,GHSyC,KAAK,MAAnC,EAA2C;ALGtD,ACAA,AKhBA,AFGQ,ACWA,ICdR,ADcQ,KDXK,CCWC,CDXN,ECWS,CDXC,CEHlB,CFGQ,CCWa,CCdrB,ADcsB,EAAL,GAAQ,ECdzB,CAAA,ADcQ,cCdR,CAAA;ANiBA,ACAA,AGbK,ACWA;ALGL,ACAA,AKjBA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;ANkBA,ACAA,AIHI,EAAA,MAAM,CAAC,EAAP,GAAY,MAAM,GAAG,CAAT,GAAa,IAAI,CAAC,EAAlB,GAAuB,MAAM,CAAC,EAA1C;ALIJ,ACAA,AIHC,AErBD,CFSa,GCEQ,ACXrB,0BAAA,GAAA,YAAA,CAAA,OAAA,CAAA,wCAAA,CAAA,CAAA;APyBA,ACAA,AKNI,gBAAY,QAAZ,AFDI,EEC0B,MFDV,EECpB,EAAgD,IAAhD,EAA8D,IAA9D,EAA0E;ANO9E,ACAA,AKP8E,AFAtE,AGjBR,IAAA,OHiBa,EAAL,EGjBR,EHiBmB,CGjBnB,KHiByB,CAAC,CGjB1B,CHiBQ,AGjBR,aAAA,CAAA;APyBA,ACAA,AGPQ,WAAK,EAAL,IAAW,MAAM,CAAC,EAAlB;AJQR,ACAA,AKRQ,AFCA,AGjBR,IAAA,KDgBa,CChBb,GDgBQ,AFCO,AGjBf,GDgBoB,CFCZ,GEDA,QChBR,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;APyBA,ACAA,AKRQ,AFCH,SEDQ,IAAL,GAAY,IAAZ;ANSR,ACAA,AKPQ,ICjBa,KDiBR,GCTT,KDSI,GAAgB,IAAI,KCTxB,KDSwB,CAAA,OAAJ,CAAa,QAAb,EAAuB,QAAvB,CAAhB;ANQR,ACAA,AKPQ,ACVJ,SDUS,QAAL,GAAgB,IAAI,UAAA,CAAA,OAAJ,CACZ,SAAA,CAAA,UAAA,CAAW,IAAI,CAAC,MAAL,KAAgB,GAA3B,CADY,EAEZ,WAAA,CAAA,UAFY,CAAhB;ANQR,ACAA,AKJK,6BFJQ,QAAc;AJS3B,ACAA,AGRQ,AGVA,OAAK,IHUA,EAAL,IAAW,AGVX,GAAkB,GHUlB,CGVsB,0BAAA,CAAA,cAAJ,CAAmB,WAAA,CAAA,UAAA,CAAW,UAA9B,EAA0C,0BAAA,CAAA,SAAA,CAAU,MAApD,CAAlB;APmBR,ACAA,AGRQ,AGVA,OAAK,IHUA,EAAL,GGVA,CHUW,EGVM,IHUjB,AGVqB,0BAAA,CAAA,cAAJ,CAAmB,WAAA,CAAA,UAAA,CAAW,KAA9B,EAAqC,0BAAA,CAAA,SAAA,CAAU,OAA/C,CAAjB;APmBR,ACAA,AGRQ,AGTA,OAAK,KAAL,CHSO,EGTM,EHSb,AGTA;APkBR,ACAA,AGRK,oCEEY;ANOjB,ACAA,AKNQ,ACZA,OAAI,GDYD,CCZK,CAAC,GDYD,ACZI,CAAZ,EAAe,CAAC,GAAC,CDYd,CAAc,EAAd,GAAmB,CAAnB,GCZc,CDYU,ACZV,KDYe,KCZhC,EAA6B,CDYF,ACZG,CDYW,CCZzC,CDY2B,CCZO,EDYY,KAAK,IAAnD,EAAyD;ANOjE,ACAA,AKNY,ACXA,QDWA,ACXM,IAAI,GAAG,EDWb,CAAA,CCXiB,MAAA,CAAA,EDWjB,CAAW,ICXE,CDWG,ACVZ,IAAI,CAAC,GDUT,EAA0B,CCVtB,EDUJ,EAA+B,CCVX,IDUgB,CCVX,ODUM,CAAc,CCVzB,CDUW,ACVI,GDUe,CAAnB,GAAuB,CCVlC,EADP,EAET,CDS2B,GAAgC,ACTvD,CAAC,MDST,ACTI,KAAgB,KAAK,SAAL,CAAe,SAAf,EAFP,EAGT,KAAK,SAAL,CAAe,QAAf,EAHS,EAIT,KAAK,SAAL,CAAe,SAAf,EAJS,CAAb;APkBZ,ACAA,AKNY,ACLA,SAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,GHED,QAAc;AJUzB,ACAA,AKNS,AFHD,AGFI,SAAK,EHEJ,EAAL,IAAW,CGFP,CAAe,IHEnB,KGFI,CAAyB,IAAzB;APYZ,ACAA,AGTQ,AGFC,WHEI,EAAL,IAAW,MAAX;AJUR,ACAA,AKPQ,AFFA,UEEG,GFFI,EEEC,EFFR,MEEG,CAAc,EAAd,GAAmB,CAAnB,IAAwB,KAAK,QAAL,CAAc,EAAd,GAAmB,KAAK,IAAnD,EAAyD;ANQjE,ACAA,AKPY,AFFP,AGFG,OAAK,CDID,KCJJ,GAAc,CDIV,CAAA,ECJc,QDId,CAAW,KAAK,QAAhB,EAA0B,ECJZ,CDId,ACJc,EDIiB,KAAK,ACJ1B,EAAd,MDImC,CAAc,EAAd,GAAmB,CAAnB,GAAuB,IAAvB,GAA8B,MAA7D;ANQZ,ACAA,AKPY,ACHJ,OAAK,MAAL,CAAY,aAAZ,CAA0B,KAAK,UAA/B;APWR,ACAA,AKPS,ACHD,OAAK,MAAL,CAAY,aAAZ,CAA0B,KAAK,SAA/B;APWR,ACAA,AKPK,ACHG,OAAK,MAAL,CAAY,KAAZ,aHAK;AJWb,ACAA,AGVQ,AGAH,aHAU,KAAK,MAAL,CAAY,KAAK,SAAL,EAAZ,CAAP;AJWR,ACAA,AGVK;AJWL,ACAA,AM3CA,OAAA,CAAA,OAAA,GAAA,KAAA,IDmCW,WAAiB;ANS5B,ACAA,AKRQ,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,EAA5B;ANSR,ACAA,AKRQ,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,AFHvB,EEGS,GAAmB,SAAjC;ANSR,ACAA,AKPQ,AFJA,WEIK,EFJE,IAAI,CAAC,CEIZ,CAAc,EFJP,CEIP,AFJiB,CEKb,IAAI,AFLc,EAAL,GAAU,KEKnB,AFLwB,CEKxB,CFLS,GAAoB,GEKjC,CAAa,CFLyB,EAAL,CEKhB,CAAC,CFLyB,EEK9B,CAAS,EFL0B,EAA7C,CEKU,AFLjB,CEKI,EAA8B,IAAI,CAAC,GAAL,CAAS,KAAT,CAA9B,EACK,QADL,CACc,KADd,CADJ;ANQR,ACAA,AKJQ,AFPH,WEOQ,aAAL;ANKR,ACAA,AKJK;ANKL,ACAA;ADCA,ACAA,4BGZS;AJaT,ACAA,AGZQ,aAAO,IAAI,QAAJ,CAAa,CEOjB,IFPsB,EAAlB,EAAsB,CEOO,IFPF,EAA3B,CAAP;AJaR,ACAA,AKLQ,AFPH,WEOQ,MAAL,CAAY,OAAZ;ANMR,ACAA,AKLQ,MAAA,OAAO,CAAC,WAAR,GAAsB,KAAtB;ANMR,ACAA,AKLQ,MAAA,OAAO,CAAC,SAAR;ANMR,ACAA,AKLQ,MAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CF9Cb,OE8CQ,CAAc,EAAd,GAAmB,WAAA,CAAA,UAAA,GAAW,CAA7C,EAAgD,KAAK,QAAL,CAAc,EAA9D;ANMR,ACAA,AKLQ,AF9CA,ME8CA,OAAO,AF9CA,CE8CC,GF9CG,GE8CX,CAAe,IF9CR,CE8Ca,AF9CA,CAAb,EAAgB,CAAhB,CAAP,GE8Ce,CAAc,EAAd,GAAmB,WAAA,CAAA,UAAA,GAAW,CAA7C,EAAgD,KAAK,QAAL,CAAc,EAAd,GAAmB,WAAA,CAAA,WAAA,GAAY,CAA/E;ANMR,ACAA,AKLQ,AF9CH,ME8CG,OAAO,CAAC,MAAR,CAAe,KAAK,QAAL,CAAc,EAAd,GAAmB,WAAA,CAAA,UAAA,GAAW,CAA7C,EAAgD,KAAK,QAAL,CAAc,EAAd,GAAmB,WAAA,CAAA,WAAA,GAAY,CAA/E;ANMR,ACAA,AKLQ,MAAA,OAAO,CAAC,SAAR;ALMR,AKLQ,MAAA,OAAO,CAAC,MAAR;ALMR,AKLQ,WAAK,QAAL,CAAc,MF/CR,CE+CN;ALMR,AKLK,AF/CG,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAP;AHqDR,AGpDK;AHqDL;AACA,2BKNW,SAAiC;ALO5C,AKLQ,MAAA,OAAO,CAAC,SAAR,CAAkB,KAAK,QAAL,CAAc,EAAhC,EAAoC,KAAK,QAAL,CAAc,EAAlD;ALMR,AKJQ,MAAA,OAAO,CAAC,MAAR,CAAe,KAAK,QAAL,CAAc,EAA7B;ALKR,AKJQ,MAAA,OAAO,CAAC,SAAR,CAAkB,CAAC,KAAK,QAAL,CAAc,EAAjC,EAAqC,CAAC,KAAK,QAAL,CAAc,EAApD;ALKR,AKJK,AFtEL,OAAA,CAAA,OAAA,GAAA,QAAA;AH2EA;AACA;AACA,6BKLa,SAAiC;ALM9C,AKLQ,MAAA,OAAO,CAAC,SAAR,CAAkB,KAAK,QAAL,CAAc,EAAhC,EAAoC,KAAK,QAAL,CAAc,EAAlD;ALMR,AKJQ,MAAA,OAAO,CAAC,MAAR,CAAe,CAAC,KAAK,QAAL,CAAc,EAA9B;ALKR,AKHQ,MAAA,OAAO,CAAC,SAAR,CAAkB,CAAC,KAAK,QAAL,CAAc,EAAjC,EAAqC,CAAC,KAAK,QAAL,CAAc,EAApD;ALIR,AKHK;ALIL;AACA;AACA;AACA;AACA;AACA,AK5EA,OAAA,CAAA,OAAA,GAAA,IAAA;AL6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LayerType;\n(function (LayerType) {\n    LayerType[LayerType[\"STATIC\"] = 0] = \"STATIC\";\n    LayerType[LayerType[\"DYNAMIC\"] = 1] = \"DYNAMIC\";\n})(LayerType = exports.LayerType || (exports.LayerType = {}));\nvar ResizeMethod;\n(function (ResizeMethod) {\n    ResizeMethod[ResizeMethod[\"FROM_ORIGIN\"] = 0] = \"FROM_ORIGIN\";\n    ResizeMethod[ResizeMethod[\"FROM_CENTER\"] = 1] = \"FROM_CENTER\";\n})(ResizeMethod = exports.ResizeMethod || (exports.ResizeMethod = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass Engine {\n    constructor() {\n        this.staticLayers = [];\n        this.dynamicLayers = [];\n        this.shouldRender = true;\n        this.lastFrameRenderedTime = null;\n        this.renderingId = null;\n        this.requestFrameA = this.requestFrameA.bind(this);\n        this.requestFrameB = this.requestFrameB.bind(this);\n    }\n    getLayer(layerIndex, layerType) {\n        if (layerType === types_1.LayerType.DYNAMIC) {\n            return this.dynamicLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n        else {\n            return this.staticLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n    }\n    registerLayer(layer) {\n        if (layer.layerType === types_1.LayerType.DYNAMIC) {\n            this.dynamicLayers.push(layer);\n        }\n        else {\n            this.staticLayers.push(layer);\n        }\n    }\n    start() {\n        this.shouldRender = true;\n        this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n    }\n    stop() {\n        this.shouldRender = false;\n        if (this.renderingId) {\n            window.cancelAnimationFrame(this.renderingId);\n        }\n    }\n    requestFrameA(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameB);\n        }\n    }\n    requestFrameB(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n        }\n    }\n    render(timestamp = 0) {\n        if (!this.lastFrameRenderedTime) {\n            this.lastFrameRenderedTime = timestamp;\n        }\n        const deltaTime = timestamp - this.lastFrameRenderedTime;\n        this.lastFrameRenderedTime = timestamp;\n        for (let i = 0; i < this.dynamicLayers.length; i++) {\n            this.dynamicLayers[i].update(deltaTime);\n            this.dynamicLayers[i].render();\n        }\n    }\n}\nexports.default = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass RenderingLayer {\n    constructor(layerIndex, layerType, initialWidth, initialHeight, initialX = 0, initialY = 0) {\n        this.layerIndex = layerIndex;\n        this.layerType = layerType;\n        this.entities = [];\n        this.width = initialWidth === undefined ? document.body.clientWidth + 1 : initialWidth;\n        this.height = initialHeight === undefined ? document.body.clientHeight + 1 : initialHeight;\n        this.x = initialX;\n        this.y = initialY;\n        const canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = `${this.layerIndex}`;\n        canvas.style.display = 'inline';\n        document.body.appendChild(canvas);\n        const context = canvas.getContext('2d');\n        if (!context) {\n            throw new Error('Could not initialize canvas 2D context.');\n        }\n        this.context = context;\n        this.context.translate(-0.5, -0.5);\n        this.resize(this.width, this.height);\n        this.setPosition(this.x, this.y);\n    }\n    resize(newWidth, newHeight, resizeMethod = types_1.ResizeMethod.FROM_ORIGIN) {\n        let xOffset = 0;\n        let yOffset = 0;\n        if (resizeMethod === types_1.ResizeMethod.FROM_CENTER) {\n            xOffset = (this.width - newWidth) / 2;\n            yOffset = (this.height - newHeight) / 2;\n        }\n        this.width = newWidth;\n        this.height = newHeight;\n        this.context.canvas.width = this.width;\n        this.context.canvas.height = this.height;\n        this.setPosition(this.x + xOffset, this.y + yOffset);\n    }\n    setPosition(newX, newY) {\n        this.x = newX;\n        this.y = newY;\n        if (!this._isLayerWithinBounds()) {\n            throw new Error('Cannot position and resize a layer outside of document body.');\n        }\n        this.context.canvas.style.left = `${this.x}px`;\n        this.context.canvas.style.top = `${this.y}px`;\n    }\n    addEntity(entity) {\n        if (!this._entityIsRenderable(entity)) {\n            throw new Error('All entities must have a render function.');\n        }\n        if (this.layerType === types_1.LayerType.DYNAMIC && !this._entityIsUpdatable(entity)) {\n            throw new Error('All entities of dynamic layers must have an updater function.');\n        }\n        this.entities.push(entity);\n    }\n    removeEntity(removeEntity) {\n        const renderersIdx = this.entities.indexOf(removeEntity);\n        if (renderersIdx !== -1) {\n            this.entities.splice(renderersIdx, 1);\n        }\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    getContext() {\n        return this.context;\n    }\n    clear() {\n        this.context.clearRect(-1, -1, this.width, this.height);\n    }\n    update(deltaTime) {\n        if (this.layerType !== types_1.LayerType.DYNAMIC) {\n            return;\n        }\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].update(deltaTime);\n        }\n    }\n    render() {\n        this.clear();\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].render(this.context);\n        }\n    }\n    _entityIsRenderable(entity) {\n        return Boolean(entity.render);\n    }\n    _entityIsUpdatable(entity) {\n        return Boolean(entity.update);\n    }\n    _isLayerWithinBounds() {\n        return (this.width + this.x > document.body.clientWidth ||\n            this.height + this.y > document.body.clientHeight ||\n            this.x < 0 ||\n            this.y < 0);\n    }\n}\nexports.RenderingLayer = RenderingLayer;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Engine_1 = __importDefault(require(\"./Engine\"));\nvar RenderingLayer_1 = require(\"./RenderingLayer\");\nexports.RenderingLayer = RenderingLayer_1.RenderingLayer;\n__export(require(\"./types\"));\nexports.default = Engine_1.default;\n","\nexport const BIRD_COUNT = 10;\n\nexport const BIRD_WIDTH = 15;\nexport const BIRD_HEIGHT = 12;\nexport const BIRD_SPEED = 100 / 1000;\n\nexport enum LayerIndex {\n    BACKGROUND,\n    BIRDS\n};","export default class Vector2D {\n\n    x1: number;\n    x2: number;\n\n    constructor(x1: number = 0, x2: number = 0) {\n        this.x1 = x1;\n        this.x2 = x2;\n    }\n\n    static ZERO() {\n        return new Vector2D(0, 0);\n    }\n\n    static ONE() {\n        return new Vector2D(1, 1);\n    }\n\n    add(vector: Vector2D) {\n        this.x1 += vector.x1;\n        this.x2 += vector.x2;\n        return this;\n    }\n\n    multiply(scalar: number) {\n        this.x1 *= scalar;\n        this.x2 *= scalar;\n        return this;\n    }\n\n    divide(scalar: number) {\n        this.x1 /= scalar;\n        this.x2 /= scalar;\n        return this;\n    }\n\n    normalize() {\n        return this.divide(this.magnitude());\n    }\n\n    magnitude() {\n        return Math.sqrt(this.x1 * this.x1 + this.x2 * this.x2);\n    }\n\n    clone() {\n        return new Vector2D(this.x1, this.x2);\n    }\n}","import Vector2D from \"./Vector2D\";\n\n/**\n * @param degree A number between 0 and 360\n */\nexport const fromDegree = (degree: number) => {\n    return degree * Math.PI / 180;\n};\n\nexport const flipVector = (vector: Vector2D, plane: 'x' | 'y', direction: 'left' | 'right' | 'up' | 'down') => {\n    let normal = 0;\n    if (plane === 'x' && direction === 'left') {\n        normal = 0;\n    } else if (plane === 'x' && direction === 'right') {\n        normal = Math.PI;\n    } else if (plane === 'y' && direction === 'up') {\n        normal = Math.PI*0.5;\n    } else if (plane === 'y' && direction === 'down') {\n        normal = Math.PI*1.5;\n    }\n    vector.x1 = normal * 2 - Math.PI - vector.x1;\n};","import { IEntity } from \"@zacktherrien/typescript-render-engine\";\n\nimport Vector2D from \"../Vector2D\";\n\nimport { BIRD_WIDTH, BIRD_HEIGHT, BIRD_SPEED } from '../constants';\nimport { fromDegree, flipVector } from '../helpers';\n\nexport interface IBird extends IEntity {\n\n}\n\nexport default class Bird implements IBird {\n\n    position: Vector2D;\n    velocity: Vector2D; // direction (angle) + speed\n\n    maxX: number;\n    maxY: number;\n\n    constructor(initialX: number, initialY: number, maxX: number, maxY: number) {\n        this.maxX = maxX;\n        this.maxY = maxY;\n\n        this.position = new Vector2D(initialX, initialY);\n        this.velocity = new Vector2D(\n            fromDegree(Math.random() * 360), // random direction.\n            BIRD_SPEED // speed.\n        );\n    }\n\n    checkBoundary() {\n        if(this.position.x1 < 0 || this.position.x1 > this.maxX) {\n            flipVector(this.velocity, 'x', this.position.x1 < 0 ? 'left' : 'right');\n            return;\n        }\n        if(this.position.x2 < 0 || this.position.x2 > this.maxY) {\n            flipVector(this.velocity, 'y', this.position.x2 < 0 ? 'up' : 'down');\n            return;\n        }\n    }\n\n    update(deltaTime: number) {\n        const angle = this.velocity.x1;\n        const speed = this.velocity.x2 * deltaTime;\n        // this.velocity.add(new Vector2D(1/100, 0));\n        this.position.add(\n            new Vector2D(Math.cos(angle), Math.sin(angle))\n                .multiply(speed)\n        );\n        this.checkBoundary();\n    }\n\n    render(context: CanvasRenderingContext2D) {\n        this.rotate(context);\n        context.strokeStyle = 'red';\n        context.beginPath();\n        context.moveTo(this.position.x1 + BIRD_WIDTH/2, this.position.x2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 + BIRD_HEIGHT/2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 - BIRD_HEIGHT/2);\n        context.closePath();\n        context.stroke();\n        this.unrotate(context);\n    }\n\n    rotate(context: CanvasRenderingContext2D) {\n        // Move registration point to the center of the bird\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(this.velocity.x1);\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n\n    unrotate(context: CanvasRenderingContext2D) {\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(-this.velocity.x1);\n        // Move registration point back to the top left corner of canvas\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n}","import Engine, { IEngine, RenderingLayer, LayerType, IRenderingLayer } from '@zacktherrien/typescript-render-engine';\n\nimport { LayerIndex, BIRD_COUNT } from './constants';\n\nimport Bird, { IBird, } from './Bird';\n\nexport default class Boids {\n\n    engine: IEngine;\n    background: IRenderingLayer;\n\n    birdLayer: IRenderingLayer;\n    birds: Array<IBird>;\n\n    constructor() {\n        this.background = new RenderingLayer(LayerIndex.BACKGROUND, LayerType.STATIC);\n        this.birdLayer = new RenderingLayer(LayerIndex.BIRDS, LayerType.DYNAMIC);\n\n        this.birds = [];\n        for(let i = 0; i<BIRD_COUNT; i++) {\n            // add a bird at a random location in our layer.\n            const bird = new Bird(\n                Math.random() * this.birdLayer.getWidth(), \n                Math.random() * this.birdLayer.getHeight(),\n                this.birdLayer.getWidth(),\n                this.birdLayer.getHeight(),\n            );\n\n            this.birds.push(bird);\n            this.birdLayer.addEntity(bird);\n        }\n\n        this.engine = new Engine();\n\n        this.engine.registerLayer(this.background);\n        this.engine.registerLayer(this.birdLayer);\n        this.engine.start();\n    }\n}","import Boids from './Boids';\n\nfunction load() {\n    const boids = new Boids();\n    // @ts-ignore\n    window.boids = boids;\n}\n\nwindow.addEventListener('load', load)"]}