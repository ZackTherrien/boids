{"version":3,"sources":["../node_modules/@zacktherrien/typescript-render-engine/dist/types.js","../node_modules/@zacktherrien/typescript-render-engine/dist/Engine/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/RenderingLayer/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/index.js","Boids/constants.ts","Boids/Vector2D/index.ts","Boids/helpers.ts","Boids/Behavior/BirdBehavior/index.ts","Boids/Rules/BirdRules/Cohesion/index.ts","Boids/Rules/BirdRules/Alignment/index.ts","Boids/Rules/BirdRules/Separation/index.ts","Boids/Terrain/types.ts","Boids/colors.ts","Boids/Behavior/SelfBehavior/index.ts","Boids/Rules/SelfRules/Hunger/index.ts","Boids/Bird/index.ts","../node_modules/fast-simplex-noise/src/index.ts","Boids/Terrain/constants.ts","Boids/Terrain/Square/index.ts","Boids/Terrain/index.ts","Boids/index.ts","index.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LayerType;\n(function (LayerType) {\n    LayerType[LayerType[\"STATIC\"] = 0] = \"STATIC\";\n    LayerType[LayerType[\"DYNAMIC\"] = 1] = \"DYNAMIC\";\n})(LayerType = exports.LayerType || (exports.LayerType = {}));\nvar ResizeMethod;\n(function (ResizeMethod) {\n    ResizeMethod[ResizeMethod[\"FROM_ORIGIN\"] = 0] = \"FROM_ORIGIN\";\n    ResizeMethod[ResizeMethod[\"FROM_CENTER\"] = 1] = \"FROM_CENTER\";\n})(ResizeMethod = exports.ResizeMethod || (exports.ResizeMethod = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass Engine {\n    constructor() {\n        this.staticLayers = [];\n        this.dynamicLayers = [];\n        this.shouldRender = true;\n        this.lastFrameRenderedTime = null;\n        this.renderingId = null;\n        this.requestFrameA = this.requestFrameA.bind(this);\n        this.requestFrameB = this.requestFrameB.bind(this);\n    }\n    getLayer(layerIndex, layerType) {\n        if (layerType === types_1.LayerType.DYNAMIC) {\n            return this.dynamicLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n        else {\n            return this.staticLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n    }\n    registerLayer(layer) {\n        if (layer.layerType === types_1.LayerType.DYNAMIC) {\n            this.dynamicLayers.push(layer);\n        }\n        else {\n            this.staticLayers.push(layer);\n        }\n    }\n    start() {\n        this.shouldRender = true;\n        this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n    }\n    stop() {\n        this.shouldRender = false;\n        if (this.renderingId) {\n            window.cancelAnimationFrame(this.renderingId);\n        }\n    }\n    requestFrameA(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameB);\n        }\n    }\n    requestFrameB(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n        }\n    }\n    render(timestamp = 0) {\n        if (!this.lastFrameRenderedTime) {\n            this.lastFrameRenderedTime = timestamp;\n        }\n        const deltaTime = timestamp - this.lastFrameRenderedTime;\n        this.lastFrameRenderedTime = timestamp;\n        for (let i = 0; i < this.dynamicLayers.length; i++) {\n            this.dynamicLayers[i].update(deltaTime);\n            this.dynamicLayers[i].render();\n        }\n    }\n}\nexports.default = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass RenderingLayer {\n    constructor(layerIndex, layerType, initialWidth, initialHeight, initialX = 0, initialY = 0) {\n        this.layerIndex = layerIndex;\n        this.layerType = layerType;\n        this.entities = [];\n        this.width = initialWidth === undefined ? document.body.clientWidth + 1 : initialWidth;\n        this.height = initialHeight === undefined ? document.body.clientHeight + 1 : initialHeight;\n        this.x = initialX;\n        this.y = initialY;\n        const canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = `${this.layerIndex}`;\n        canvas.style.display = 'inline';\n        document.body.appendChild(canvas);\n        const context = canvas.getContext('2d');\n        if (!context) {\n            throw new Error('Could not initialize canvas 2D context.');\n        }\n        this.context = context;\n        this.context.translate(-0.5, -0.5);\n        this.resize(this.width, this.height);\n        this.setPosition(this.x, this.y);\n    }\n    resize(newWidth, newHeight, resizeMethod = types_1.ResizeMethod.FROM_ORIGIN) {\n        let xOffset = 0;\n        let yOffset = 0;\n        if (resizeMethod === types_1.ResizeMethod.FROM_CENTER) {\n            xOffset = (this.width - newWidth) / 2;\n            yOffset = (this.height - newHeight) / 2;\n        }\n        this.width = newWidth;\n        this.height = newHeight;\n        this.context.canvas.width = this.width;\n        this.context.canvas.height = this.height;\n        this.setPosition(this.x + xOffset, this.y + yOffset);\n    }\n    setPosition(newX, newY) {\n        this.x = newX;\n        this.y = newY;\n        if (!this._isLayerWithinBounds()) {\n            throw new Error('Cannot position and resize a layer outside of document body.');\n        }\n        this.context.canvas.style.left = `${this.x}px`;\n        this.context.canvas.style.top = `${this.y}px`;\n    }\n    addEntity(entity) {\n        if (!this._entityIsRenderable(entity)) {\n            throw new Error('All entities must have a render function.');\n        }\n        if (this.layerType === types_1.LayerType.DYNAMIC && !this._entityIsUpdatable(entity)) {\n            throw new Error('All entities of dynamic layers must have an updater function.');\n        }\n        this.entities.push(entity);\n    }\n    removeEntity(removeEntity) {\n        const renderersIdx = this.entities.indexOf(removeEntity);\n        if (renderersIdx !== -1) {\n            this.entities.splice(renderersIdx, 1);\n        }\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    getContext() {\n        return this.context;\n    }\n    clear() {\n        this.context.clearRect(-1, -1, this.width, this.height);\n    }\n    update(deltaTime) {\n        if (this.layerType !== types_1.LayerType.DYNAMIC) {\n            return;\n        }\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].update(deltaTime);\n        }\n    }\n    render() {\n        this.clear();\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].render(this.context);\n        }\n    }\n    _entityIsRenderable(entity) {\n        return Boolean(entity.render);\n    }\n    _entityIsUpdatable(entity) {\n        return Boolean(entity.update);\n    }\n    _isLayerWithinBounds() {\n        return (this.width + this.x > document.body.clientWidth ||\n            this.height + this.y > document.body.clientHeight ||\n            this.x < 0 ||\n            this.y < 0);\n    }\n}\nexports.RenderingLayer = RenderingLayer;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Engine_1 = __importDefault(require(\"./Engine\"));\nvar RenderingLayer_1 = require(\"./RenderingLayer\");\nexports.RenderingLayer = RenderingLayer_1.RenderingLayer;\n__export(require(\"./types\"));\nexports.default = Engine_1.default;\n","export enum LayerIndex {\n    BACKGROUND,\n    BIRDS\n};\n\nexport const BIRD_COUNT = 500;\n\nexport const BIRD_WIDTH = 4;\nexport const BIRD_HEIGHT = 2;\nexport const BIRD_SPEED = 100 / 1000; // 60 pixels per 1000ms\n\nexport const BIRD_VISUAL_RANGE = 75;\n\nexport const MAX_BIRD_ENERGY = 1000;\nexport const ACCELERATION_ENERGY_COST = 1 / 100; // 1 energy per 100 pixel accelaration \nexport const LIVING_ENERGY_COST = 1 / 1000; // 1 energy loss per second to live\n\nexport const BIRD_SEPARATION_DISTANCE = 2*Math.sqrt(BIRD_WIDTH*BIRD_WIDTH + BIRD_HEIGHT*BIRD_HEIGHT); // x pixels before they move apart\nexport const BIRD_SEPARATION_EAGERNESS = 0.2;\nexport const BIRD_COHESION_EAGERNESS = 0.01; // Where 0 = Not Eager. 1 = Immediate change to coalesse\nexport const BIRD_ALIGNMENT_EAGERNESS = 0.1; // Where 0 = Not Eager. 1 = Immediate change.\n\nexport const BIRD_START_HUNGER_ENERGY = MAX_BIRD_ENERGY / 2; // When birds are half out of energy, start looking for food.\nexport const BIRD_EATING_SPEED = 50/1000; // 10 energy per second can be consumed.","export default class Vector2D {\n\n    x1: number;\n    x2: number;\n\n    constructor(x1: number = 0, x2: number = 0) {\n        this.x1 = x1;\n        this.x2 = x2;\n    }\n\n    static ZERO() {\n        return new Vector2D(0, 0);\n    }\n\n    static ONE() {\n        return new Vector2D(1, 1);\n    }\n\n    static CONST_ZERO = Vector2D.ZERO();\n    static CONST_ONE = Vector2D.ONE();\n\n    null() {\n        this.x1 = 0;\n        this.x2 = 0;\n    }\n\n    add(vector: Vector2D) {\n        this.x1 += vector.x1;\n        this.x2 += vector.x2;\n        return this;\n    }\n    \n    sub(vector: Vector2D) {\n        this.x1 -= vector.x1;\n        this.x2 -= vector.x2;\n        return this;\n    }\n\n    multiply(scalar: number) {\n        this.x1 *= scalar;\n        this.x2 *= scalar;\n        return this;\n    }\n\n    divide(scalar: number) {\n        this.x1 /= scalar;\n        this.x2 /= scalar;\n        return this;\n    }\n\n    normalize() {\n        const mag = this.magnitude();\n        if(mag === 0) {\n            return Vector2D.ZERO();\n        }\n        return this.divide(mag);\n    }\n\n    magnitude() {\n        return Math.sqrt(this.x1 * this.x1 + this.x2 * this.x2);\n    }\n\n    distance(vector: Vector2D): number {\n        return Math.sqrt((this.x1 - vector.x1) ** 2 + (this.x2 - vector.x2) ** 2)\n    }\n\n    clone() {\n        return new Vector2D(this.x1, this.x2);\n    }\n}","import Vector2D from \"./Vector2D\";\n\n/**\n * @param degree A number between 0 and 360\n */\nexport const fromDegree = (degree: number) => {\n    return degree * Math.PI / 180;\n};\n\nexport const getAngle = (vector: Vector2D) => {\n    return Math.atan2(vector.x2, vector.x1);\n}\n\nexport const flipVector = (vector: Vector2D, plane: 'x' | 'y', direction: 'left' | 'right' | 'up' | 'down') => {\n    const angle = getAngle(vector);\n\n\n    let normal = 0;\n    if (plane === 'x' && direction === 'left') {\n        normal = 0;\n    } else if (plane === 'x' && direction === 'right') {\n        normal = Math.PI;\n    } else if (plane === 'y' && direction === 'up') {\n        normal = Math.PI*0.5;\n    } else if (plane === 'y' && direction === 'down') {\n        normal = Math.PI*1.5;\n    }\n    const newAngle = normal * 2 - Math.PI - angle;\n\n    vector.x1 = Math.cos(newAngle);\n    vector.x2 = Math.sin(newAngle);\n};","import Vector2D from \"../../Vector2D\";\nimport { IBird } from \"../../Bird\";\n\nexport interface IBirdBehavior {\n    reset(): void;\n    perform(birdCount: number): Vector2D;\n    accumulate(boid: IBird): void;\n}\n\nexport default abstract class BirdBehavior implements IBirdBehavior {\n    value: Vector2D;\n    bird: IBird;\n\n    constructor(bird: IBird) {\n        this.bird = bird;\n        this.value = Vector2D.ZERO();\n    }\n\n    reset = () => {\n        this.value.null();\n    }\n\n    abstract perform(birdCount: number): Vector2D;\n\n    abstract accumulate(boid: IBird): void;\n\n}","import Vector2D from \"../../../Vector2D\";\nimport { IBird } from \"../../../Bird\";\nimport Behavior, { IBirdBehavior } from '../../../Behavior/BirdBehavior';\nimport { BIRD_SPEED, BIRD_COHESION_EAGERNESS } from \"../../../constants\";\n\ninterface ICohesion extends IBirdBehavior {\n}\n\nexport default class Cohesion extends Behavior implements ICohesion {\n    perform(birdCount: number): Vector2D {\n        return this.value\n            .divide(birdCount)      // average position of other birds\n            .sub(this.bird.position)     // how far away are they from this bird\n            .normalize()            // not normalizing means the average positions cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.bird.velocity)     // subtract our velocity to get the force\n            .multiply(BIRD_COHESION_EAGERNESS); // change how fast birds want to coalesce\n    }\n\n    accumulate(bird: IBird) {\n        this.value.add(bird.position);\n    }\n}","import Vector2D from \"../../../Vector2D\";\nimport { IBird } from \"../../../Bird\";\nimport Behavior, { IBirdBehavior } from '../../../Behavior/BirdBehavior';\nimport { BIRD_SPEED, BIRD_ALIGNMENT_EAGERNESS } from \"../../../constants\";\n\ninterface IAlignment extends IBirdBehavior {\n}\n\nexport default class Alignment extends Behavior implements IAlignment {\n    perform(birdCount: number): Vector2D {\n        return this.value\n            .divide(birdCount)      // average velocity of other birds\n            .normalize()            // not normalizing means the average velocities cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.bird.velocity)     // subtract our velocity to get the force\n            .multiply(BIRD_ALIGNMENT_EAGERNESS); // Change how fast birds want to align. 0 = No alignment, 1 = Immediate alignment.\n    }\n\n    accumulate(bird: IBird) {\n        this.value.add(bird.velocity);\n    }\n}","import Vector2D from \"../../../Vector2D\";\nimport { IBird } from \"../../../Bird\";\nimport Behavior, { IBirdBehavior } from '../../../Behavior/BirdBehavior';\nimport { BIRD_SPEED, BIRD_SEPARATION_DISTANCE, BIRD_SEPARATION_EAGERNESS } from \"../../../constants\";\n\ninterface ISeparation extends IBirdBehavior {\n}\n\nexport default class Separation extends Behavior implements ISeparation {\n    perform(birdCount: number): Vector2D {\n        return this.value\n            .divide(birdCount)\n            .normalize()            // not normalizing means the average velocities cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.bird.velocity)     // find the difference between the separation velocity and ours.\n            .multiply(BIRD_SEPARATION_EAGERNESS); // Change how fast birds want to align. 0 = No alignment, 1 = Immediate alignment.\n    }\n\n    accumulate(bird: IBird) {\n        const positionDiff = this.bird.position\n            .clone()             // must clone because Vector2D is mutable\n            .sub(bird.position); // find the difference to the other bird\n\n        const distance = positionDiff.magnitude(); // find the distance\n        if(distance <= BIRD_SEPARATION_DISTANCE) {\n            this.value.add(     // add the force to our accumulator\n                positionDiff.divide(distance)\n            );\n        }\n    }\n}","export enum SquareType {\n    DEEP_WATER,\n    SHORE_WATER,\n\n    SAND,\n    SWAMP,\n\n    GRASSLAND,\n    RAIN_FOREST,\n\n    MOUNTAIN,\n    SNOW_PEAK,\n};\n\nexport type TerrainDefinition = {\n    min: number,\n    max: number,\n};\n\nexport type TerrainDefinitions = {\n    height: TerrainDefinition,\n    humidity: TerrainDefinition,\n    moisture: TerrainDefinition,\n};","import { SquareType } from \"./Terrain/types\";\n\nexport const BirdColor = '#242124';\n\nexport const SquareColors = {\n    [SquareType.DEEP_WATER]: '#006B99',\n    [SquareType.SHORE_WATER]: '#008ECC',\n\n    [SquareType.SAND]: '#e5d8c1',\n    [SquareType.SWAMP]: '#555c45',\n\n    [SquareType.GRASSLAND]: '#bbcba0',\n    [SquareType.RAIN_FOREST]: '#92b29f',\n    \n    [SquareType.MOUNTAIN]: '#AAAAAA',\n    [SquareType.SNOW_PEAK]: '#FFFFFF',\n};","import { IBird } from \"../../Bird\";\n\nexport interface ISelfBehavior {\n    reset(): void;\n    perform(): void;\n    decrement(deltaTime: number): void;\n}\n\nexport default abstract class SelfBehavior implements ISelfBehavior {\n    value: number;\n    bird: IBird;\n\n    constructor(bird: IBird) {\n        this.bird = bird;\n        this.value = 0;\n    }\n\n    reset = () => {\n        this.value = 0;\n    }\n\n    abstract perform(): void;\n\n    abstract decrement(deltaTime: number): void;\n\n}","import SelfBehavior, { ISelfBehavior } from \"../../../Behavior/SelfBehavior\";\nimport { BIRD_START_HUNGER_ENERGY, BIRD_EATING_SPEED, MAX_BIRD_ENERGY, ACCELERATION_ENERGY_COST, LIVING_ENERGY_COST, BIRD_VISUAL_RANGE } from \"../../../constants\";\nimport Boids from \"../../..\";\n\ninterface IHunger extends ISelfBehavior {\n}\n\nexport default class Hunger extends SelfBehavior implements IHunger {\n    perform() {\n        if(this.bird.energy < BIRD_START_HUNGER_ENERGY) {\n            const square = Boids.instance.terrain.getSquareAtLocation(this.bird.position);\n            if(square && square.foodLevel > 0) {\n                this.bird.landed = true;\n            }\n        }\n    }\n\n    decrement(deltaTime: number) {\n        if(this.bird.landed) {\n            const square = Boids.instance.terrain.getSquareAtLocation(this.bird.position);\n            if(square.foodLevel > 0) {\n                const potentialConsumption = BIRD_EATING_SPEED * deltaTime;\n                let actualConsumption = potentialConsumption;\n                if(potentialConsumption > square.foodLevel) {\n                    actualConsumption = square.foodLevel;\n                }\n                if(actualConsumption + this.bird.energy > MAX_BIRD_ENERGY) {\n                    actualConsumption = MAX_BIRD_ENERGY - this.bird.energy;\n                }\n\n                // birds will consume everything until there is no more food.\n                square.foodLevel -= actualConsumption;\n                this.bird.energy += actualConsumption;\n            } else {\n                this.bird.landed = false;\n            }\n        }\n\n        this.bird.energy -= (\n            ACCELERATION_ENERGY_COST * this.bird.acceleration.magnitude() * deltaTime * deltaTime +\n            LIVING_ENERGY_COST * deltaTime\n        );\n    }\n}","import { IEntity } from \"@zacktherrien/typescript-render-engine\";\n\nimport Vector2D from \"../Vector2D\";\n\nimport Boids from '../';\n\nimport { \n    BIRD_WIDTH, \n    BIRD_HEIGHT, \n    BIRD_SPEED,\n    BIRD_VISUAL_RANGE,\n    MAX_BIRD_ENERGY,\n} from '../constants';\nimport { fromDegree, getAngle } from '../helpers';\nimport { IBirdBehavior } from \"../Behavior/BirdBehavior\";\nimport Cohesion from \"../Rules/BirdRules/Cohesion\";\nimport Alignment from \"../Rules/BirdRules/Alignment\";\nimport Separation from \"../Rules/BirdRules/Separation\";\nimport { BirdColor } from \"../colors\";\nimport Hunger from \"../Rules/SelfRules/Hunger\";\nimport { ISelfBehavior } from \"../Behavior/SelfBehavior\";\n\nexport interface IBird extends IEntity {\n    position: Vector2D;\n    velocity: Vector2D;\n    acceleration: Vector2D;\n\n    energy: number;\n\n    landed: boolean;\n}\n\nexport default class Bird implements IBird {\n    \n    boids: Boids;\n    maxX: number;\n    maxY: number;\n\n    position: Vector2D;\n    velocity: Vector2D;\n    acceleration: Vector2D;\n\n    energy: number;\n\n    landed: boolean;\n\n    birdRules: Array<IBirdBehavior>;\n    selfRules: Array<ISelfBehavior>;\n\n    constructor(boids: Boids, initialX: number, initialY: number, maxX: number, maxY: number) {\n        this.boids = boids;\n\n        this.maxX = maxX;\n        this.maxY = maxY;\n\n        this.position = new Vector2D(initialX, initialY);\n        const randomAngle = fromDegree(Math.random() * 360);\n        this.velocity = new Vector2D(\n            Math.cos(randomAngle),\n            Math.sin(randomAngle)\n        )\n            .normalize()\n            .multiply(BIRD_SPEED);\n        this.acceleration = Vector2D.ZERO();\n\n        this.energy = MAX_BIRD_ENERGY/2 + MAX_BIRD_ENERGY/2 * Math.random();\n\n        this.birdRules = [\n            new Cohesion(this),\n            new Alignment(this),\n            new Separation(this),\n        ];\n\n        this.selfRules = [\n            new Hunger(this),\n        ];\n\n        this.landed = false;\n    }\n\n    resetAccumulators() {\n        this.acceleration.null();\n\n        for(let i = 0; i<this.birdRules.length; i++) {\n            this.birdRules[i].reset();\n        }\n    }\n\n    /**\n     * Perform all maneuvers for this bird.\n     * @param birds The birds in range of this bird\n     */\n    performManeuvers(birds: Array<IBird>) {\n        this.resetAccumulators();\n\n        if(!this.landed) {\n            let perceivedBirdCount = 0;\n            for(let i = 0; i<birds.length; i++) {\n                if(\n                    !birds[i].landed &&     // only flying birds are taken into account\n                    birds[i] !== this &&    // that is not this bird\n                    birds[i].position.distance(this.position) < BIRD_VISUAL_RANGE // and is in range\n                ) {\n                    perceivedBirdCount += 1;\n                    for(let r = 0; r<this.birdRules.length; r++) {\n                        this.birdRules[r].accumulate(birds[i]);\n                    }\n                }\n            }\n    \n            // Flock mechanics\n            if(perceivedBirdCount !== 0) {\n                for(let i = 0; i<this.birdRules.length; i++) {\n                    this.acceleration.add(\n                        this.birdRules[i].perform(perceivedBirdCount)\n                    );\n                }\n                // TODO: Limit acceleration.\n            }\n        }\n        this.checkVelocity();\n    }\n\n    performSenses() {\n        for(let i = 0; i<this.selfRules.length; i++) {\n            this.selfRules[i].perform();\n        }\n    }\n\n    checkBoundary() {\n        if(this.position.x1 < 0){\n            this.position.x1 = this.maxX;\n        } else if(this.position.x1 > this.maxX){\n            this.position.x1 = 0;\n        }\n        if(this.position.x2 < 0){\n            this.position.x2 = this.maxY;\n        } else if(this.position.x2 > this.maxY){\n            this.position.x2 = 0;\n        }\n    }\n\n    checkVelocity() {\n        // limit velocity:\n        if (this.velocity.magnitude() > BIRD_SPEED) {\n            this.velocity\n                .normalize()\n                .multiply(BIRD_SPEED);\n        }\n    }\n\n    die() {\n        this.boids.birds.splice(this.boids.birds.indexOf(this), 1);\n        this.boids.birdLayer.removeEntity(this);\n    }\n\n    update(deltaTime: number) {\n        this.performSenses();\n        this.performManeuvers(this.boids.birds);\n\n        if(!this.landed) {\n            this.position.add(\n                this.velocity\n                    .clone() // we must clone because multiply mutates the object.\n                    .multiply(deltaTime)\n            );\n        }\n        this.velocity.add(this.acceleration);\n        this.checkBoundary();\n\n        for(let i = 0; i<this.selfRules.length; i++) {\n            this.selfRules[i].decrement(deltaTime);\n        }\n        if(this.energy < 0) {\n            this.die();\n        }\n    }\n\n    render(context: CanvasRenderingContext2D) {\n        this.rotate(context);\n        context.strokeStyle = BirdColor;\n        context.beginPath();\n        context.moveTo(this.position.x1 + BIRD_WIDTH/2, this.position.x2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 + BIRD_HEIGHT/2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 - BIRD_HEIGHT/2);\n        context.closePath();\n        context.stroke();\n\n        // context.strokeStyle = 'green';\n        // context.beginPath();\n        // context.arc(this.position.x1, this.position.x2, this.visibilityLeft.x2, this.visibilityLeft.x1, this.visibilityLeft.x1 - SIGHT_ANGLE, true);\n\n        // context.stroke();\n\n        // context.beginPath();\n        // context.arc(this.position.x1, this.position.x2, this.visibilityRight.x2, this.visibilityRight.x1, Math.PI, true);\n        // context.closePath();\n        // context.stroke();\n\n        \n        this.unrotate(context);\n    }\n\n    rotate(context: CanvasRenderingContext2D) {\n        // Move registration point to the center of the bird\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(getAngle(this.velocity));\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n\n    unrotate(context: CanvasRenderingContext2D) {\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(-getAngle(this.velocity));\n        // Move registration point back to the top left corner of canvas\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n}","/*\n * A speed-improved simplex noise algorithm for 2D, 3D and 4D in JavaScript.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n */\n\nexport interface Options {\n  amplitude?: number\n  frequency?: number\n  max?: number\n  min?: number\n  octaves?: number\n  persistence?: number\n  random?: () => number\n}\n\nexport default class FastSimplexNoise {\n  readonly amplitude: number\n  readonly frequency: number\n  readonly octaves: number\n  readonly perm: Uint8Array\n  readonly permMod12: Uint8Array\n  readonly persistence: number\n  readonly random: () => number\n  readonly scale: (value: number) => number\n\n  static G2 = (3.0 - Math.sqrt(3.0)) / 6.0\n  static G3 = 1.0 / 6.0\n  static G4 = (5.0 - Math.sqrt(5.0)) / 20.0\n\n  static GRAD3D = [\n    [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n    [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n    [0, 1, 1], [0, -1, -1], [0, 1, -1], [0, -1, -1]\n  ]\n\n  static GRAD4D = [\n    [0, 1, 1, 1], [0, 1, 1, -1], [0, 1, -1, 1], [0, 1, -1, -1],\n    [0, -1, 1, 1], [0, -1, 1, -1], [0, -1, -1, 1], [0, -1, -1, -1],\n    [1, 0, 1, 1], [1, 0, 1, -1], [1, 0, -1, 1], [1, 0, -1, -1],\n    [-1, 0, 1, 1], [-1, 0, 1, -1], [-1, 0, -1, 1], [-1, 0, -1, -1],\n    [1, 1, 0, 1], [1, 1, 0, -1], [1, -1, 0, 1], [1, -1, 0, -1],\n    [-1, 1, 0, 1], [-1, 1, 0, -1], [-1, -1, 0, 1], [-1, -1, 0, -1],\n    [1, 1, 1, 0], [1, 1, -1, 0], [1, -1, 1, 0], [1, -1, -1, 0],\n    [-1, 1, 1, 0], [-1, 1, -1, 0], [-1, -1, 1, 0], [-1, -1, -1, 0]\n  ]\n\n  constructor (options: Options = {}) {\n    if (options.hasOwnProperty('amplitude')) {\n      if (typeof options.amplitude !== 'number') throw new Error('options.amplitude must be a number')\n      this.amplitude = options.amplitude\n    } else this.amplitude = 1.0\n\n    if (options.hasOwnProperty('frequency')) {\n      if (typeof options.frequency !== 'number') throw new Error('options.frequency must be a number')\n      this.frequency = options.frequency\n    } else this.frequency = 1.0\n\n    if (options.hasOwnProperty('octaves')) {\n      if (typeof options.octaves !== 'number' ||\n        !isFinite(options.octaves) ||\n        Math.floor(options.octaves) !== options.octaves\n      ) {\n        throw new Error('options.octaves must be an integer')\n      }\n      this.octaves = options.octaves\n    } else this.octaves = 1\n\n    if (options.hasOwnProperty('persistence')) {\n      if (typeof options.persistence !== 'number') throw new Error('options.persistence must be a number')\n      this.persistence = options.persistence\n    } else this.persistence = 0.5\n\n    if (options.hasOwnProperty('random')) {\n      if (typeof options.random !== 'function') throw new Error('options.random must be a function')\n      this.random = options.random\n    } else this.random = Math.random\n\n    let min: number\n    if (options.hasOwnProperty('min')) {\n      if (typeof options.min !== 'number') throw new Error('options.min must be a number')\n      min = options.min\n    } else min = -1\n\n    let max: number\n    if (options.hasOwnProperty('max')) {\n      if (typeof options.max !== 'number') throw new Error('options.max must be a number')\n      max = options.max\n    } else max = 1\n\n    if (min >= max) throw new Error(`options.min (${min}) must be less than options.max (${max})`)\n\n    this.scale = min === -1 && max === 1\n      ? value => value\n      : value => min + ((value + 1) / 2) * (max - min)\n\n    const p = new Uint8Array(256)\n    for (let i = 0; i < 256; i++) p[i] = i\n\n    let n: number\n    let q: number\n    for (let i = 255; i > 0; i--) {\n      n = Math.floor((i + 1) * this.random())\n      q = p[i]\n      p[i] = p[n]\n      p[n] = q\n    }\n\n    this.perm = new Uint8Array(512)\n    this.permMod12 = new Uint8Array(512)\n    for (let i = 0; i < 512; i++) {\n      this.perm[i] = p[i & 255]\n      this.permMod12[i] = this.perm[i] % 12\n    }\n  }\n\n  cylindrical (circumference: number, coords: number[]): number {\n    switch (coords.length) {\n      case 2: return this.cylindrical2D(circumference, coords[0], coords[1])\n      case 3: return this.cylindrical3D(circumference, coords[0], coords[1], coords[2])\n      default: return null\n    }\n  }\n\n  cylindrical2D (circumference: number, x: number, y: number): number {\n    const nx = x / circumference\n    const r = circumference / (2 * Math.PI)\n    const rdx = nx * 2 * Math.PI\n    const a = r * Math.sin(rdx)\n    const b = r * Math.cos(rdx)\n\n    return this.scaled3D(a, b, y)\n  }\n\n  cylindrical3D (circumference: number, x: number, y: number, z: number) {\n    const nx = x / circumference\n    const r = circumference / (2 * Math.PI)\n    const rdx = nx * 2 * Math.PI\n    const a = r * Math.sin(rdx)\n    const b = r * Math.cos(rdx)\n\n    return this.scaled4D(a, b, y, z)\n  }\n\n  dot (gs: number[], coords: number[]): number {\n    return gs\n      .slice(0, Math.min(gs.length, coords.length))\n      .reduce((total, g, i) => total + (g * coords[i]), 0)\n  }\n\n  raw (coords: number[]): number {\n    switch (coords.length) {\n      case 2: return this.raw2D(coords[0], coords[1])\n      case 3: return this.raw3D(coords[0], coords[1], coords[2])\n      case 4: return this.raw4D(coords[0], coords[1], coords[2], coords[3])\n      default: return null\n    }\n  }\n\n  raw2D (x: number, y: number): number {\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y) * 0.5 * (Math.sqrt(3.0) - 1.0) // Hairy factor for 2D\n    const i = Math.floor(x + s)\n    const j = Math.floor(y + s)\n    const t = (i + j) * FastSimplexNoise.G2\n    const X0 = i - t // Unskew the cell origin back to (x,y) space\n    const Y0 = j - t\n    const x0 = x - X0 // The x,y distances from the cell origin\n    const y0 = y - Y0\n\n    // Determine which simplex we are in.\n    const i1 = x0 > y0 ? 1 : 0\n    const j1 = x0 > y0 ? 0 : 1\n\n    // Offsets for corners\n    const x1 = x0 - i1 + FastSimplexNoise.G2\n    const y1 = y0 - j1 + FastSimplexNoise.G2\n    const x2 = x0 - 1.0 + 2.0 * FastSimplexNoise.G2\n    const y2 = y0 - 1.0 + 2.0 * FastSimplexNoise.G2\n\n    // Work out the hashed gradient indices of the three simplex corners\n    const ii = i & 255\n    const jj = j & 255\n    const gi0 = this.permMod12[ii + this.perm[jj]]\n    const gi1 = this.permMod12[ii + i1 + this.perm[jj + j1]]\n    const gi2 = this.permMod12[ii + 1 + this.perm[jj + 1]]\n\n    // Calculate the contribution from the three corners\n    const t0 = 0.5 - x0 * x0 - y0 * y0\n    const n0 = t0 < 0 ? 0.0 : Math.pow(t0, 4) * this.dot(FastSimplexNoise.GRAD3D[gi0], [x0, y0])\n    const t1 = 0.5 - x1 * x1 - y1 * y1\n    const n1 = t1 < 0 ? 0.0 : Math.pow(t1, 4) * this.dot(FastSimplexNoise.GRAD3D[gi1], [x1, y1])\n    const t2 = 0.5 - x2 * x2 - y2 * y2\n    const n2 = t2 < 0 ? 0.0 : Math.pow(t2, 4) * this.dot(FastSimplexNoise.GRAD3D[gi2], [x2, y2])\n\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1, 1]\n    return 70.14805770653952 * (n0 + n1 + n2)\n  }\n\n  raw3D (x: number, y: number, z: number): number {\n    // Skew the input space to determine which simplex cell we're in\n    const s = (x + y + z) / 3.0 // Very nice and simple skew factor for 3D\n    const i = Math.floor(x + s)\n    const j = Math.floor(y + s)\n    const k = Math.floor(z + s)\n    const t = (i + j + k) * FastSimplexNoise.G3\n    const X0 = i - t // Unskew the cell origin back to (x,y,z) space\n    const Y0 = j - t\n    const Z0 = k - t\n    const x0 = x - X0 // The x,y,z distances from the cell origin\n    const y0 = y - Y0\n    const z0 = z - Z0\n\n    // Deterine which simplex we are in\n    let i1: number, j1: number, k1: number // Offsets for second corner of simplex in (i,j,k) coords\n    let i2: number, j2: number, k2: number // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n      if (y0 >= z0) {\n        i1 = i2 = j2 = 1\n        j1 = k1 = k2 = 0\n      } else if (x0 >= z0) {\n        i1 = i2 = k2 = 1\n        j1 = k1 = j2 = 0\n      } else {\n        k1 = i2 = k2 = 1\n        i1 = j1 = j2 = 0\n      }\n    } else {\n      if (y0 < z0) {\n        k1 = j2 = k2 = 1\n        i1 = j1 = i2 = 0\n      } else if (x0 < z0) {\n        j1 = j2 = k2 = 1\n        i1 = k1 = i2 = 0\n      } else {\n        j1 = i2 = j2 = 1\n        i1 = k1 = k2 = 0\n      }\n    }\n\n    const x1 = x0 - i1 + FastSimplexNoise.G3 // Offsets for second corner in (x,y,z) coords\n    const y1 = y0 - j1 + FastSimplexNoise.G3\n    const z1 = z0 - k1 + FastSimplexNoise.G3\n    const x2 = x0 - i2 + 2.0 * FastSimplexNoise.G3 // Offsets for third corner in (x,y,z) coords\n    const y2 = y0 - j2 + 2.0 * FastSimplexNoise.G3\n    const z2 = z0 - k2 + 2.0 * FastSimplexNoise.G3\n    const x3 = x0 - 1.0 + 3.0 * FastSimplexNoise.G3 // Offsets for last corner in (x,y,z) coords\n    const y3 = y0 - 1.0 + 3.0 * FastSimplexNoise.G3\n    const z3 = z0 - 1.0 + 3.0 * FastSimplexNoise.G3\n\n    // Work out the hashed gradient indices of the four simplex corners\n    const ii = i & 255\n    const jj = j & 255\n    const kk = k & 255\n    const gi0 = this.permMod12[ii + this.perm[jj + this.perm[kk]]]\n    const gi1 = this.permMod12[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1]]]\n    const gi2 = this.permMod12[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2]]]\n    const gi3 = this.permMod12[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1]]]\n\n    // Calculate the contribution from the four corners\n    const t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0\n    const n0 = t0 < 0 ? 0.0 : Math.pow(t0, 4) * this.dot(FastSimplexNoise.GRAD3D[gi0], [x0, y0, z0])\n    const t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1\n    const n1 = t1 < 0 ? 0.0 : Math.pow(t1, 4) * this.dot(FastSimplexNoise.GRAD3D[gi1], [x1, y1, z1])\n    const t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2\n    const n2 = t2 < 0 ? 0.0 : Math.pow(t2, 4) * this.dot(FastSimplexNoise.GRAD3D[gi2], [x2, y2, z2])\n    const t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3\n    const n3 = t3 < 0 ? 0.0 : Math.pow(t3, 4) * this.dot(FastSimplexNoise.GRAD3D[gi3], [x3, y3, z3])\n\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to stay just inside [-1,1]\n    return 94.68493150681972 * (n0 + n1 + n2 + n3)\n  }\n\n  raw4D (x: number, y: number, z: number, w: number): number {\n    // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n    const s = (x + y + z + w) * (Math.sqrt(5.0) - 1.0) / 4.0 // Factor for 4D skewing\n    const i = Math.floor(x + s)\n    const j = Math.floor(y + s)\n    const k = Math.floor(z + s)\n    const l = Math.floor(w + s)\n    const t = (i + j + k + l) * FastSimplexNoise.G4 // Factor for 4D unskewing\n    const X0 = i - t // Unskew the cell origin back to (x,y,z,w) space\n    const Y0 = j - t\n    const Z0 = k - t\n    const W0 = l - t\n    const x0 = x - X0  // The x,y,z,w distances from the cell origin\n    const y0 = y - Y0\n    const z0 = z - Z0\n    const w0 = w - W0\n\n    // To find out which of the 24 possible simplices we're in, we need to determine the magnitude ordering of x0, y0,\n    // z0 and w0. Six pair-wise comparisons are performed between each possible pair of the four coordinates, and the\n    // results are used to rank the numbers.\n    let rankx = 0\n    let ranky = 0\n    let rankz = 0\n    let rankw = 0\n    if (x0 > y0) rankx++\n    else ranky++\n    if (x0 > z0) rankx++\n    else rankz++\n    if (x0 > w0) rankx++\n    else rankw++\n    if (y0 > z0) ranky++\n    else rankz++\n    if (y0 > w0) ranky++\n    else rankw++\n    if (z0 > w0) rankz++\n    else rankw++\n\n    // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n    // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n    // impossible. Only the 24 indices which have non-zero entries make any sense.\n    // We use a thresholding to set the coordinates in turn from the largest magnitude.\n    // Rank 3 denotes the largest coordinate.\n    const i1 = rankx >= 3 ? 1 : 0\n    const j1 = ranky >= 3 ? 1 : 0\n    const k1 = rankz >= 3 ? 1 : 0\n    const l1 = rankw >= 3 ? 1 : 0\n    // Rank 2 denotes the second largest coordinate.\n    const i2 = rankx >= 2 ? 1 : 0\n    const j2 = ranky >= 2 ? 1 : 0\n    const k2 = rankz >= 2 ? 1 : 0\n    const l2 = rankw >= 2 ? 1 : 0\n    // Rank 1 denotes the second smallest coordinate.\n    const i3 = rankx >= 1 ? 1 : 0\n    const j3 = ranky >= 1 ? 1 : 0\n    const k3 = rankz >= 1 ? 1 : 0\n    const l3 = rankw >= 1 ? 1 : 0\n\n    // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n    const x1 = x0 - i1 + FastSimplexNoise.G4 // Offsets for second corner in (x,y,z,w) coords\n    const y1 = y0 - j1 + FastSimplexNoise.G4\n    const z1 = z0 - k1 + FastSimplexNoise.G4\n    const w1 = w0 - l1 + FastSimplexNoise.G4\n    const x2 = x0 - i2 + 2.0 * FastSimplexNoise.G4 // Offsets for third corner in (x,y,z,w) coords\n    const y2 = y0 - j2 + 2.0 * FastSimplexNoise.G4\n    const z2 = z0 - k2 + 2.0 * FastSimplexNoise.G4\n    const w2 = w0 - l2 + 2.0 * FastSimplexNoise.G4\n    const x3 = x0 - i3 + 3.0 * FastSimplexNoise.G4 // Offsets for fourth corner in (x,y,z,w) coords\n    const y3 = y0 - j3 + 3.0 * FastSimplexNoise.G4\n    const z3 = z0 - k3 + 3.0 * FastSimplexNoise.G4\n    const w3 = w0 - l3 + 3.0 * FastSimplexNoise.G4\n    const x4 = x0 - 1.0 + 4.0 * FastSimplexNoise.G4 // Offsets for last corner in (x,y,z,w) coords\n    const y4 = y0 - 1.0 + 4.0 * FastSimplexNoise.G4\n    const z4 = z0 - 1.0 + 4.0 * FastSimplexNoise.G4\n    const w4 = w0 - 1.0 + 4.0 * FastSimplexNoise.G4\n\n    // Work out the hashed gradient indices of the five simplex corners\n    const ii = i & 255\n    const jj = j & 255\n    const kk = k & 255\n    const ll = l & 255\n    const gi0 = this.perm[ii + this.perm[jj + this.perm[kk + this.perm[ll]]]] % 32\n    const gi1 = this.perm[ii + i1 + this.perm[jj + j1 + this.perm[kk + k1 + this.perm[ll + l1]]]] % 32\n    const gi2 = this.perm[ii + i2 + this.perm[jj + j2 + this.perm[kk + k2 + this.perm[ll + l2]]]] % 32\n    const gi3 = this.perm[ii + i3 + this.perm[jj + j3 + this.perm[kk + k3 + this.perm[ll + l3]]]] % 32\n    const gi4 = this.perm[ii + 1 + this.perm[jj + 1 + this.perm[kk + 1 + this.perm[ll + 1]]]] % 32\n\n    // Calculate the contribution from the five corners\n    const t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0\n    const n0 = t0 < 0 ? 0.0 : Math.pow(t0, 4) * this.dot(FastSimplexNoise.GRAD4D[gi0], [x0, y0, z0, w0])\n    const t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1\n    const n1 = t1 < 0 ? 0.0 : Math.pow(t1, 4) * this.dot(FastSimplexNoise.GRAD4D[gi1], [x1, y1, z1, w1])\n    const t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2\n    const n2 = t2 < 0 ? 0.0 : Math.pow(t2, 4) * this.dot(FastSimplexNoise.GRAD4D[gi2], [x2, y2, z2, w2])\n    const t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3\n    const n3 = t3 < 0 ? 0.0 : Math.pow(t3, 4) * this.dot(FastSimplexNoise.GRAD4D[gi3], [x3, y3, z3, w3])\n    const t4 = 0.5 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4\n    const n4 = t4 < 0 ? 0.0 : Math.pow(t4, 4) * this.dot(FastSimplexNoise.GRAD4D[gi4], [x4, y4, z4, w4])\n\n    // Sum up and scale the result to cover the range [-1,1]\n    return 72.37855765153665 * (n0 + n1 + n2 + n3 + n4)\n  }\n\n  scaled (coords: number[]): number {\n    switch (coords.length) {\n      case 2: return this.scaled2D(coords[0], coords[1])\n      case 3: return this.scaled3D(coords[0], coords[1], coords[2])\n      case 4: return this.scaled4D(coords[0], coords[1], coords[2], coords[3])\n      default: return null\n    }\n  }\n\n  scaled2D (x: number, y: number): number {\n    let amplitude = this.amplitude\n    let frequency = this.frequency\n    let maxAmplitude = 0\n    let noise = 0\n\n    for (let i = 0; i < this.octaves; i++) {\n      noise += this.raw2D(x * frequency, y * frequency) * amplitude\n      maxAmplitude += amplitude\n      amplitude *= this.persistence\n      frequency *= 2\n    }\n\n    return this.scale(noise / maxAmplitude)\n  }\n\n  scaled3D (x: number, y: number, z: number): number {\n    let amplitude = this.amplitude\n    let frequency = this.frequency\n    let maxAmplitude = 0\n    let noise = 0\n\n    for (let i = 0; i < this.octaves; i++) {\n      noise += this.raw3D(x * frequency, y * frequency, z * frequency) * amplitude\n      maxAmplitude += amplitude\n      amplitude *= this.persistence\n      frequency *= 2\n    }\n\n    return this.scale(noise / maxAmplitude)\n  }\n\n  scaled4D (x: number, y: number, z: number, w: number): number {\n    let amplitude = this.amplitude\n    let frequency = this.frequency\n    let maxAmplitude = 0\n    let noise = 0\n\n    for (let i = 0; i < this.octaves; i++) {\n      noise += this.raw4D(x * frequency, y * frequency, z * frequency, w * frequency) * amplitude\n      maxAmplitude += amplitude\n      amplitude *= this.persistence\n      frequency *= 2\n    }\n\n    return this.scale(noise / maxAmplitude)\n  }\n\n  spherical (circumference: number, coords: number[]): number {\n    switch (coords.length) {\n      case 3: return this.spherical3D(circumference, coords[0], coords[1], coords[2])\n      case 2: return this.spherical2D(circumference, coords[0], coords[1])\n      default: return null\n    }\n  }\n\n  spherical2D (circumference: number, x: number, y: number): number {\n    const nx = x / circumference\n    const ny = y / circumference\n    const rdx = nx * 2 * Math.PI\n    const rdy = ny * Math.PI\n    const sinY = Math.sin(rdy + Math.PI)\n    const sinRds = 2 * Math.PI\n    const a = sinRds * Math.sin(rdx) * sinY\n    const b = sinRds * Math.cos(rdx) * sinY\n    const d = sinRds * Math.cos(rdy)\n\n    return this.scaled3D(a, b, d)\n  }\n\n  spherical3D (circumference: number, x: number, y: number, z: number): number {\n    const nx = x / circumference\n    const ny = y / circumference\n    const rdx = nx * 2 * Math.PI\n    const rdy = ny * Math.PI\n    const sinY = Math.sin(rdy + Math.PI)\n    const sinRds = 2 * Math.PI\n    const a = sinRds * Math.sin(rdx) * sinY\n    const b = sinRds * Math.cos(rdx) * sinY\n    const d = sinRds * Math.cos(rdy)\n\n    return this.scaled4D(a, b, d, z)\n  }\n}\n","import { SquareType, TerrainDefinitions } from \"./types\";\n\nexport const SQUARE_SIZE = 6;\n\nexport const SQUARE_FOODS: Map<SquareType, number> = new Map([\n    [\n        SquareType.DEEP_WATER, 0\n    ],\n    [\n        SquareType.SHORE_WATER, 0\n    ],\n    [\n        SquareType.SWAMP, 250\n    ],\n    [\n        SquareType.SAND, 50\n    ],\n\n    [\n        SquareType.GRASSLAND, 250\n    ],\n    [\n        SquareType.RAIN_FOREST, 1000\n    ],\n    [\n        SquareType.MOUNTAIN, 50\n    ],\n\n    [\n        SquareType.SNOW_PEAK, 0\n    ]\n])\n\nexport const SQUARE_TERRAIN_DEFINITIONS: Map<\n    SquareType, \n    TerrainDefinitions\n> = new Map([\n    [\n        SquareType.DEEP_WATER, \n        {\n            height: {\n                min: 0,\n                max: 0.35,\n            },\n            moisture: {\n                min: 0,\n                max: 1,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.SHORE_WATER, \n        {\n            height: {\n                min: 0.35,\n                max: 0.45,\n            },\n            moisture: {\n                min: 0,\n                max: 0.7,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.SWAMP, \n        {\n            height: {\n                min: 0.35,\n                max: 0.45,\n            },\n            moisture: {\n                min: 0.7,\n                max: 1,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.SAND, \n        {\n            height: {\n                min: 0.45,\n                max: 0.7,\n            },\n            moisture: {\n                min: 0,\n                max: 0.4,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.GRASSLAND, \n        {\n            height: {\n                min: 0.45,\n                max: 0.7,\n            },\n            moisture: {\n                min: 0.4,\n                max: 0.7,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.RAIN_FOREST, \n        {\n            height: {\n                min: 0.45,\n                max: 0.7,\n            },\n            moisture: {\n                min: 0.7,\n                max: 1,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.MOUNTAIN, \n        {\n            height: {\n                min: 0.7,\n                max: 0.8,\n            },\n            moisture: {\n                min: 0,\n                max: 1,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n    [\n        SquareType.SNOW_PEAK, \n        {\n            height: {\n                min: 0.8,\n                max: 1,\n            },\n            moisture: {\n                min: 0,\n                max: 1,\n            },\n            humidity: {\n                min: 0,\n                max: 1,\n            }\n        }\n    ],\n\n    // [\n    //     SquareType.SNOW, \n    //     {\n    //         height: {\n    //             min: 0.8,\n    //             max: 1,\n    //         },\n    //         moisture: {\n    //             min: 0.5,\n    //             max: 1,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.TUNDRA, \n    //     {\n    //         height: {\n    //             min: 0.8,\n    //             max: 1,\n    //         },\n    //         moisture: {\n    //             min: 0.3,\n    //             max: 0.5,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.BARE, \n    //     {\n    //         height: {\n    //             min: 0.8,\n    //             max: 1,\n    //         },\n    //         moisture: {\n    //             min: 0.15,\n    //             max: 0.3,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.SCORCHED, \n    //     {\n    //         height: {\n    //             min: 0.8,\n    //             max: 1,\n    //         },\n    //         moisture: {\n    //             min: 0,\n    //             max: 0.15,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    \n    // [\n    //     SquareType.TAIGA, \n    //     {\n    //         height: {\n    //             min: 0.6,\n    //             max: 0.8,\n    //         },\n    //         moisture: {\n    //             min: 0.7,\n    //             max: 1,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.SHRUBLAND, \n    //     {\n    //         height: {\n    //             min: 0.6,\n    //             max: 0.8,\n    //         },\n    //         moisture: {\n    //             min: 0.4,\n    //             max: 0.7,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.TEMPERATE_DESERT, \n    //     {\n    //         height: {\n    //             min: 0.6,\n    //             max: 0.8,\n    //         },\n    //         moisture: {\n    //             min: 0,\n    //             max: 0.4,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.TEMPERATE_RAIN_FOREST, \n    //     {\n    //         height: {\n    //             min: 0.4,\n    //             max: 0.6,\n    //         },\n    //         moisture: {\n    //             min: 0.8,\n    //             max: 1,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.TEMPERATE_DECIDUOUS_FOREST, \n    //     {\n    //         height: {\n    //             min: 0.4,\n    //             max: 0.6,\n    //         },\n    //         moisture: {\n    //             min: 0.5,\n    //             max: 0.8,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.GRASSLAND, \n    //     {\n    //         height: {\n    //             min: 0.4,\n    //             max: 0.6,\n    //         },\n    //         moisture: {\n    //             min: 0,\n    //             max: 0.3,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // // [\n    // //     SquareType.TEMPERATE_DESERT, \n    // //     {\n    // //         height: {\n    // //             min: 0.4,\n    // //             max: 0.6,\n    // //         },\n    // //         moisture: {\n    // //             min: 0,\n    // //             max: 0.3,\n    // //         },\n    // //         humidity: {\n    // //             min: 0,\n    // //             max: 1,\n    // //         }\n    // //     }\n    // // ],\n\n    // [\n    //     SquareType.TROPICAL_RAIN_FOREST, \n    //     {\n    //         height: {\n    //             min: 0.2,\n    //             max: 0.4,\n    //         },\n    //         moisture: {\n    //             min: 0.7,\n    //             max: 1,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.TROPICAL_SEASONAL_FOREST, \n    //     {\n    //         height: {\n    //             min: 0.2,\n    //             max: 0.4,\n    //         },\n    //         moisture: {\n    //             min: 0.4,\n    //             max: 0.7,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n    // [\n    //     SquareType.SUBTROPICAL_DESERT, \n    //     {\n    //         height: {\n    //             min: 0.2,\n    //             max: 0.4,\n    //         },\n    //         moisture: {\n    //             min: 0,\n    //             max: 0.4,\n    //         },\n    //         humidity: {\n    //             min: 0,\n    //             max: 1,\n    //         }\n    //     }\n    // ],\n]);","import { IEntity } from \"@zacktherrien/typescript-render-engine\";\nimport { SQUARE_SIZE, SQUARE_FOODS } from \"../constants\";\nimport { SquareColors } from \"../../colors\";\nimport { SquareType } from \"../types\";\n\nexport interface ISquare extends IEntity {\n    foodLevel: number;\n}\n\nexport default class Square implements ISquare {\n\n    x: number;\n    y: number;\n\n    type: SquareType;\n\n    foodLevel: number;\n\n    constructor(x: number, y: number, type: SquareType) {\n        this.x = x;\n        this.y = y;\n        this.type = type;\n\n        this.foodLevel = SQUARE_FOODS.get(this.type) || 0;\n    }\n\n    render(context: CanvasRenderingContext2D) {\n        context.fillStyle = SquareColors[this.type];\n        context.fillRect(this.x * SQUARE_SIZE, this.y * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE);\n    }\n\n}","import { RenderingLayer, LayerType, IRenderingLayer } from \"@zacktherrien/typescript-render-engine\";\nimport FastSimplexNoise from '../../../node_modules/fast-simplex-noise/src';\n\nimport Square, { ISquare } from \"./Square\";\nimport Vector2D from \"../Vector2D\";\n\nimport { LayerIndex } from \"../constants\";\nimport { SquareType, TerrainDefinitions } from \"./types\";\nimport { SQUARE_TERRAIN_DEFINITIONS, SQUARE_SIZE } from \"./constants\";\n\nexport interface  ITerrain { \n    layer: IRenderingLayer;\n\n    getSquareAtLocation(position: Vector2D): ISquare;\n}\n\nexport default class Terrain implements ITerrain {\n\n    layer: IRenderingLayer;\n\n    squares: Array<Array<ISquare>>;\n\n    heightMap: FastSimplexNoise;\n\n    humidityMap: FastSimplexNoise;\n\n    moistureMap: FastSimplexNoise;\n\n    constructor() {\n        this.layer = new RenderingLayer(LayerIndex.BACKGROUND, LayerType.STATIC);\n\n        this.heightMap = new FastSimplexNoise({ \n            frequency: 0.01, \n            max: 1, \n            min: 0, \n            octaves: 4,\n        });\n        this.humidityMap = new FastSimplexNoise({\n            frequency: 0.01,\n            max: 1,\n            min: 0,\n            octaves: 8,\n        });\n        this.moistureMap = new FastSimplexNoise({\n            frequency: 0.01,\n            max: 1,\n            min: 0,\n            octaves: 8,\n        });\n\n        this.squares = [];\n\n        this.initSquares();\n    }\n\n    initSquares() {\n        const screenWidth = this.layer.getWidth();\n        const screenHeight = this.layer.getHeight();\n        const amountOfSquaresInX = Math.ceil(screenWidth/SQUARE_SIZE);\n        const amountOfSquaresInY = Math.ceil(screenHeight/SQUARE_SIZE);\n\n        let currentRow = [];\n        let square;\n        for(let y = 0; y<amountOfSquaresInY; y++) {\n            currentRow = [];\n            for(let x = 0; x<amountOfSquaresInX; x++) {\n                square = new Square(x, y, this.getTerrainType(x, y));\n                currentRow.push(square);\n                this.layer.addEntity(square);\n            }\n            this.squares.push(currentRow);\n        }\n    }\n\n    getSquareAtLocation(position: Vector2D): ISquare {\n        const row = Math.floor(position.x2/SQUARE_SIZE);\n        const col = Math.floor(position.x1/SQUARE_SIZE);\n        if(col > this.squares[0].length) {\n            ;;debugger;;\n        }\n        if(row > this.squares.length) {\n            ;;debugger;;\n        }\n        if(!this.squares || !this.squares[row] || !this.squares[row][col]) {\n            ;;debugger;;\n        }\n        return this.squares[row][col];\n    }\n\n    getTerrainType(x: number, y: number) {\n        const height = this.heightMap.scaled2D(x, y);\n        // const humidity = this.humidityMap.scaled2D(x, y);\n        const moisture = this.moistureMap.scaled2D(x, y);\n        const squareType = this.squareTypeFromHeight(height, 0, moisture);\n\n        return squareType;\n    }\n\n    squareTypeFromHeight(height: number, humidity: number, moisture: number): SquareType {\n        let foundType = null;\n        SQUARE_TERRAIN_DEFINITIONS.forEach((values: TerrainDefinitions, type: SquareType) => {\n            if(height >= values.height.min && height <= values.height.max) {\n                // if(humidity >= values.humidity.min && humidity <= values.humidity.max) {\n                    if(moisture >= values.moisture.min && moisture <= values.moisture.max) {\n                        foundType = type;\n                    }\n                // }\n            }\n        });\n        if(foundType === null) {\n            ;;debugger;;\n            throw new Error();\n        }\n        return foundType;\n    }\n}","import Engine, { IEngine, RenderingLayer, LayerType, IRenderingLayer } from '@zacktherrien/typescript-render-engine';\n\nimport { LayerIndex, BIRD_COUNT } from './constants';\n\nimport Bird, { IBird, } from './Bird';\nimport Vector2D from './Vector2D';\nimport Terrain, { ITerrain } from './Terrain';\n\nexport default class Boids {\n\n    static instance: Boids;\n\n    engine: IEngine;\n    terrain: ITerrain;\n\n    birdLayer: IRenderingLayer;\n    birds: Array<IBird>;\n\n    isLeftClicked: boolean;\n    isRightClicked: boolean;\n    mouseLocation: Vector2D;\n\n    constructor() {\n        Boids.instance = this;\n        this.terrain = new Terrain();\n        this.birdLayer = new RenderingLayer(LayerIndex.BIRDS, LayerType.DYNAMIC);\n\n        this.birds = [];\n        for(let i = 0; i<BIRD_COUNT; i++) {\n            // add a bird at a random location in our layer.\n            const bird = new Bird(\n                this,\n                Math.random() * this.birdLayer.getWidth(), \n                Math.random() * this.birdLayer.getHeight(),\n                this.birdLayer.getWidth(),\n                this.birdLayer.getHeight(),\n            );\n\n            this.birds.push(bird);\n            this.birdLayer.addEntity(bird);\n        }\n\n        this.isLeftClicked = false;\n        this.isRightClicked = false;\n        this.mouseLocation = Vector2D.ZERO();\n\n        this.engine = new Engine();\n\n        this.engine.registerLayer(this.terrain.layer);\n        this.engine.registerLayer(this.birdLayer);\n        this.engine.start();\n        this.terrain.layer.render();\n\n        document.addEventListener('mousedown', this.handleMouseDown.bind(this));\n        document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n        document.addEventListener('mousemove', this.handleMouseMove.bind(this));\n        document.addEventListener('contextmenu', event => event.preventDefault());\n    }\n\n    handleMouseDown(e: MouseEvent) {\n        if(e.button === 0) {\n            this.isLeftClicked = true;\n        } else {\n            this.isRightClicked = true;\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n        this.mouseLocation = new Vector2D(e.offsetX, e.offsetY);\n    }\n\n    handleMouseMove(e: MouseEvent) {\n        this.mouseLocation = new Vector2D(e.offsetX, e.offsetY);\n    }\n\n    handleMouseUp() {\n        this.isLeftClicked = false;\n        this.isRightClicked = false;\n        this.mouseLocation = Vector2D.ZERO();\n    }\n}","import Boids from './Boids';\n\nfunction load() {\n    const boids = new Boids();\n    // @ts-ignore\n    window.boids = boids;\n}\n\nwindow.addEventListener('load', load)","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}