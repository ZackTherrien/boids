{"version":3,"sources":["../node_modules/@zacktherrien/typescript-render-engine/dist/types.js","../node_modules/@zacktherrien/typescript-render-engine/dist/Engine/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/RenderingLayer/index.js","../node_modules/@zacktherrien/typescript-render-engine/dist/index.js","Boids/constants.ts","Boids/Vector2D/index.ts","Boids/helpers.ts","Boids/Bird/index.ts","Boids/index.ts","index.ts"],"names":[],"mappings":"ACAA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA;ACCA,ACAA,ACAA,AHAA,AIJa,OAAA,CAAA,UAAA,GAAa,GAAb;AHKb,ACAA,ACAA,AHAA,AIHa,AEEA,OFFA,AEEA,CFFA,AEEA,UFFA,AEEA,GFFa,AEEA,CFFb,SEEc,MAAD,EAAmB;ALE7C,ACAA,ACAA,AHAA,AIHa,AEET,OFFS,CAAA,CEEF,MAAM,GAAG,CFFP,GAAc,AEEH,CFFX,AEEY,EAAd,GAAmB,GAA1B;ALEJ,ACAA,ACAA,AHAA,AIHa,AEEZ,CAFY,MFAA,CAAA,UAAA,GAAa,MAAM,IAAnB;AHIb,ACAA,ACAA,AHAA,AIHa,OAAA,CAAA,iBAAA,GAAoB,EAApB;AHIb,ACAA,ACAA,AHAA,AIHa,AEEA,OFFA,AEEA,CFFA,AEEA,QAAA,GAAW,SFFX,CEEY,EFFW,CAAvB,GEEW,EAAqB;ALE7C,ACAA,ACAA,AHAA,AIFa,AECT,OFDS,CAAA,CECF,IAAI,CAAC,KAAL,CAAW,MAAM,CAAC,EAAlB,EAAsB,CFDpB,GAA2B,EECD,CAAC,CFDE,CEC/B,CAAP,EFD0C,CAAC,IAAL,CAAU,OAAA,CAAA,UAAA,GAAW,OAAA,CAAA,UAAX,GAAwB,OAAA,CAAA,WAAA,GAAY,OAAA,CAAA,WAA9C,CAA7B;AHGb,ACAA,ACAA,AHAA,AIFa,AECZ,AGXD,CHSa,GDTQ,AIArB,GLUa,CAAA,GKVb,GAAA,eAAA,CAAA,GLUa,GAA4B,CKVzC,CAAA,CLUa,QKVb,CAAA,CAAA;ARaA,ACAA,ACAA,AERI,ADMS,OAAA,CAAA,cCNiC,SDMjC,GAA0B,IAA1B;AHGb,ACAA,AGT8C,ADOjC,AECA,AGXb,OLUa,AECA,CDRG,ADOH,AECA,CGXJ,CJGqC,GIH9C,GAAa,EHWA,GAAa,UAAC,CFDd,GAA2B,EECd,CFDb,CECgC,KAAnB,EAAqC,SAArC,EAAoF,wBDRjF,CAAiB;AJU9C,ACAA,AGV8C,ADSjC,AEAT,AGXA,MHWM,AGXA,CLWG,CCTmB,ADSnB,ECTiC,CCS/B,AGXA,GHWG,AGXA,IAAI,CLWT,EEAK,CFAS,AEAT,GGXI,CLWS,AKXT,CLWU,EAAL,CEAT,CAAS,CFAQ,CKXjB,ELWL,AKXT,EHWc,CAAd,2CDTyC,CAAC;AJW9C,ACAA,AEDa,AEET,AGZA,EAAA,IHYI,CFFK,CAAA,AKVH,CAAC,GHYG,EGZV,CHYa,CAAb,CGZe,ELUN,GAAc,AKVvB,ELUS;AHEb,ACAA,AGZ8C,ADY9C,AKXC,ILWW,UAAZ;AHCA,ACAA,AKhBA,ADgBI,IChBJ,EDgBQ,KAAK,GChBb,EDgBkB,CChBlB,EDgBQ,IAAiB,SChBzB,ADgBkC,CChBlC,IDgBuC,GChBvC,CAAA,EDgBI,EAA2C,SChB/C,CAAA,CAAA;ANiBA,ACAA,AGbQ,ADWR,AEEQ,AGXR,CLSA,GEEQ,EGXF,CAAC,EJFM,CCaC,CDbN,ADWI,EEEK,CDbC,ACaV,EDbA,KDWR,EAAsB,AKTtB,CAAwB,MAAxB,EAAgC,IAAhC;ARYA,ACAA,AKdA,AFCQ,ADWJ,AEEC,EFFD,CEAA,CCZJ,KFCa,ACaF,EDbH,CDWJ,CAAA,AEEW,CDbG,CEDlB,CFCQ,EEDR,ADcoB,KFFhB,AEEqB,CFFrB,CGZJ,CAAA,ADce,IAAiB,MFF5B,CAAA,EEEqC,CCdzC,AHYI,CGZJ,AHYI,CAAA,EEE0C,CFF1C,MEEO,EAA4C,IFFnD;AHGJ,ACAA,AGbK,ADWD,AEEI,EFFJ,EEEI,MAAM,EFFV,CAAA,AEEa,IAAI,CAAC,EAAd,GFFJ,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AHGJ,ACAA,AKNA,AHIC,AEEI,CFLL,EAAY,AEGD,CCJX,KDMW,ICNX,AHCsB,AEKP,GCNf,AHCY,EEKQ,KCNpB,AHCY,AEKa,CCNzB,AHCY,EEKG,IAAiB,IFLpB,EGDZ,CAAA,EHCY,AEK6B,KAAK,EFLlC,CAAA,CEKD,EAAyC,OFLxC,GAAU,EAAV,CAAZ;AHMA,ACAA,AIAQ,IAAA,MAAM,GAAG,IAAI,CAAC,EAAL,GAAQ,GAAjB;ALCR,ACAA,AEJC,AEII,GAFM,CCCU,KDCV,IAAI,KAAK,KAAK,GAAV,IAAiB,SAAS,KAAK,MAAnC,EAA2C;ALCtD,ACAA,AKeI,ADfI,IAAA,MAAM,GAAG,GCeD,CDfK,CAAC,EAAL,CCeb,EAA0B,ADfL,GAAjB,EDJA,GEmBJ,EAA4C,QAA5C,EAA8D,IAA9D,EAA4E,IAA5E,EAAwF;ANd5F,ACAA,AKc4F,AFlBpF,ACIH,WDJQ,EAAL,GAAU,CAAV;AJKR,ACAA,AGJQ,WAAK,EAAL,GAAU,CAAV;AJKR,ACAA,AKaQ,AFjBH,ACGD,AE3BJ,IAAA,EF2BU,GCcG,KAAL,ADdU,GCcG,ADdA,KCcb,CDdmB,GAAG,CAAT,GAAa,AE3BlC,GAAA,CF2BsC,CAAC,EAAlB,GAAuB,KAAxC,AE3BJ,CAAA,OAAA,CAAA,wCAAA,CAAA,CAAA;AP6BA,ACAA,AKcQ,ADdJ,EAAA,MAAM,CCcG,ADdF,EAAP,ECcI,CDdQ,ECcI,EDdA,CAAC,CCcb,EDdQ,CAAS,QAAT,CAAZ;ALCJ,ACAA,AKcQ,ADdJ,AE5BJ,EF4BI,EE5BJ,IF4BU,CCcG,ADdF,EAAP,ECcI,CDdQ,CE5BhB,CD0CoB,EDdA,AE5BpB,CF4BqB,CCcb,EDdQ,CAAS,EE5BzB,CAAA,KF4BgB,CAAZ,OE5BJ,CAAA;AP6BA,ACAA,AKeQ,ADfP,CAlBY,QCiCA,QAAL,GAAgB,IAAI,AFpBpB,QAAgB,EEoBI,CAAA,OAAJ,CAAa,QAAb,EAAuB,QAAvB,CAAhB;ANdR,ACAA,AKeQ,AFpBA,AGvBR,IAAA,ID2Cc,EC3Cd,CHuBa,EAAL,AGvBR,IHuBmB,EEoBM,GAAG,CFpBH,CAAC,EAAlB,EGvBR,CAAA,ED2C4B,CAAA,IC3C5B,CAAA,KD2C4B,CAAW,EC3CvC,CAAA,CD2C2C,AC3C3C,CD2C4C,MAAL,KAAgB,GAA3B,CAApB;ANdR,ACAA,AKeQ,AFpBA,SEoBK,EFpBA,EAAL,IEoBA,AFpBW,GEoBK,GFpBC,CEoBG,AFpBF,EAAlB,QEoBoB,CAAA,OAAJ,CACZ,IAAI,CAAC,GAAL,CAAS,WAAT,CADY,EAEZ,IAAI,CAAC,GAAL,CAAS,WAAT,CAFY,EAIX,SAJW,GAKX,QALW,CAKF,WAAA,CAAA,UALE,CAAhB;ANdR,ACAA,AKqBQ,AF1BA,AGxBR,IAAA,KDkDa,IF1BE,CGxBf,GHwBQ,AGxBR,IDkDQ,GAAoB,QClD5B,CAAA,CDkD4B,CAAA,KClD5B,CAAA,CDkD4B,CAAS,IAAT,EAApB,IClDR,CAAA,CAAA;AP8BA,ACAA,AK0BQ,AF/BH,SE+BQ,mBAAL,GAA2B,UAAA,CAAA,OAAA,CAAS,IAAT,EAA3B;ANzBR,ACAA,AK0BQ,ICvDa,KDuDR,qBAAL,GAA6B,UAAA,CAAA,OAAA,CAAS,IAAT,EAA7B;ANzBR,ACAA,AK0BQ,AC5CJ,SD4CS,UC5CT,UD4CI,GAA4B,UAAA,CAAA,OAAA,CAAS,IAAT,EAA5B;ANzBR,ACAA,AK0BK,AC7CD,wBHaI,QAAgB;AJOxB,ACAA,AGNQ,WAAK,EAAL,IAAW,MAAM,CAAC,EAAlB;AJOR,ACAA,AGNQ,AGdA,SAAK,EHcA,EAAL,IAAW,EGdX,GAAkB,CHcD,CAAC,EAAlB,AGdsB,0BAAA,CAAA,cAAJ,CAAmB,WAAA,CAAA,UAAA,CAAW,UAA9B,EAA0C,0BAAA,CAAA,SAAA,CAAU,MAApD,CAAlB;APqBR,ACAA,AGNQ,AGdA,SAAK,IHcE,IAAP,CGdA,GAAiB,IAAI,0BAAA,CAAA,cAAJ,CAAmB,WAAA,CAAA,UAAA,CAAW,KAA9B,EAAqC,0BAAA,CAAA,SAAA,CAAU,OAA/C,CAAjB;APqBR,ACAA,AGNK,AGbG,SAAK,KAAL,GAAa,EAAb,qBD2Ca;ANvBrB,ACAA,AKwBQ,WAAK,YAAL,CAAkB,IAAlB;ANvBR,ACAA,AKyBQ,AC7CA,SAAI,ED6CC,EC7CG,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAC,MD6CjB,CAAyB,IAAzB,AC7CiB,CAAA,UAAjB,EAA6B,CAAC,EAA9B,EAAkC;APqB1C,ACAA,AKyBQ,AC5CI,UAAM,CD4CL,GC5CS,GAAG,IAAI,MAAA,CAAA,CHYhB,GEgCL,CAA2B,EC5CV,CACT,CD2CR,AFhCmB,GGZF,EAET,IAAI,CAAC,MAAL,KAAgB,KAAK,SAAL,CAAe,QAAf,EAFP,EAGT,IAAI,CAAC,MAAL,KAAgB,KAAK,SAAL,CAAe,SAAf,EAHP,EAIT,KAAK,SAAL,CAAe,QAAf,EAJS,EAKT,KAAK,SAAL,CAAe,SAAf,EALS,CAAb;APoBZ,ACAA,AKyBQ,AFhCA,AGLI,WDqCC,AFhCA,AGLI,EHKT,GGLI,CHKO,AGLI,IAAX,CAAgB,CHKpB,GGLI,KDqCJ,CAA0B,IAA1B;ANxBR,ACAA,AKyBK,AFhCG,AGLI,WHKC,AGLI,EHKT,IAAW,GGLP,CAAe,EHKnB,OGLI,CAAyB,IAAzB;APaZ,ACAA,AGPQ,AGLC,aHKM,IAAP;AJQR,ACAA,AGPK;AJQL,ACAA,AMZQ,SAAK,aAAL,GAAqB,KAArB,ODwCa,OAAmB;AN3BxC,ACAA,AK4BQ,ACxCA,SAAK,EDwCA,YCxCL,GAAsB,EDwCtB,GCxCA;APaR,ACAA,AK6BQ,ACzCA,SAAK,CDyCD,YCzCJ,GAAqB,EHIlB,CEqCmB,GAAG,CAAzB,GFrCiB,AGJI,CAAA,OAAA,CAAS,IAAT,EAArB;APaR,ACAA,AGRQ,AGHA,SAAK,EHGA,EAAL,EGHA,EHGW,CGHG,IAAI,CHGlB,yBGHkB,CAAA,OAAJ,EAAd;APYR,ACAA,AK4BQ,AFpCA,AGFA,SAAK,EDsCD,AFpCC,EAAL,EEoCQ,ACtCR,CDsCS,ACtCG,CHED,EEoCC,CAAZ,EAAe,CAAC,AFpChB,GEoCiB,GCtCjB,CAA0B,CDsCJ,CAAC,GCtCQ,GDsC/B,EAA+B,CAAC,EAAhC,EAAoC,ACtCpC;APWR,ACAA,AK4BY,AFpCJ,AGFA,SAAK,GDsCE,CFpCA,EGFP,CAAY,CDsCA,AFpCZ,CEoCa,CAAD,CAAL,KAAa,IAAb,ACtCP,CAA0B,GDsCE,ECtCG,GDsCE,CAAC,CAAD,CAAL,CAAS,ECtCrC,MDsC4B,CAAkB,QAAlB,CAA2B,KAAK,QAAhC,IAA4C,WAAA,CAAA,iBAApE,EAAuF;AN3BnG,ACAA,AK4BgB,AFpCX,AGFG,SAAK,CDsCG,KCtCR,CAAY,KAAZ,ODsC0B,IAAI,CAAtB;AN3BhB,ACAA,AK4BgB,ACrCR,IAAA,QAAQ,CAAC,EDqCI,cCrCb,CAA0B,GDqClB,CAAwB,KAAK,CAAC,CAAD,ACrCrC,CDqCQ,CCrC+B,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAAvC;APUR,ACAA,AK4BgB,ACrCR,IAAA,QAAQ,CAAC,EDqCI,cCrCb,CAA0B,KDqClB,CAA0B,GCrClC,EDqCuC,ACrCF,CDqCG,CAAD,CAA/B,ECrCkC,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAArC;APUR,ACAA,AK4BgB,ACrCR,IAAA,QAAQ,CAAC,EDqCI,cCrCb,CAA0B,EHArB,EEqCG,CAAyB,KAAK,CAAC,ACrCvC,CDqCsC,CAA9B,ACrC+B,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CAAvC;APUR,ACAA,AK4Ba,AFrCL,AGAA,IAAA,MHAM,EGAE,CHAC,AGAA,GHAG,KAAK,QGAjB,CHAY,AGAc,EHA1B,WGAA,EAAyC,UAAA,KAAK;APUtD,ACAA,AK4BS,ACtC6C,aAAI,KAAK,CAAC,cAAN,EAAJ;APWtD,ACAA,AGVQ,AGD8C,KAA9C,KHCG,GAAG,KAAK,CAAX,EAAc;AJWtB,ACAA,AK6BQ,AFvCI,AGDP,UDwCM,KFvCQ,QAAQ,CAAC,IEuCC,AFvCV,EAAP,GEuCsB,CAA1B,EAA6B;AN5BrC,ACAA,AK6BY,AFvCH,aEuCQ,YAAL,CACK,GADL,CACS,KAAK,eAAL,CAAqB,kBAArB,CADT,EAEK,GAFL,CAES,KAAK,iBAAL,CAAuB,kBAAvB,CAFT,EAGK,GAHL,CAGS,KAAK,gBAAL,CAAsB,kBAAtB,CAHT;AL5BZ,AKiCS;ALhCT,AGXQ,aAAO,KAAK,MAAL,CAAY,GAAZ,CAAP;AHYR,AKsCQ,AFjDH,WEiDQ,aAAL,YCnDY,GAAa;ANcjC,AKsCQ,ACnDA,UAAG,CDmDE,ACnDD,CAAC,MAAF,KAAa,CDmDhB,ACnDA,EAAmB;ANc3B,AKsCK,ACnDO,aAAK,aAAL,GAAqB,IAArB;ANcZ,AMbS,OAFD,MAEO,mBHCF;AHab,AGZQ,AGDI,aHCG,AGDE,IHCE,CAAC,IAAL,CAAU,IGDb,CHCkB,EAAL,AGDS,GHCC,CGDvB,IHC4B,EAAf,GAAoB,KAAK,EAAL,GAAU,KAAK,EAA7C,CAAP;AHaR,AGZK,AGDO,QAAA,CAAC,CAAC,cAAF,eDkDW,MAAW;ALpClC,AKqCQ,AClDI,QAAA,CAAC,CAAC,CDkDD,mBAAL,CAAyB,GAAzB,AClDI,CDkDyB,IAAI,CAAC,QAAlC;ALpCR,AKqCK,AClDI;ANcT,6BGba,QAAgB;AHc7B,AGbQ,AGDA,WAAK,EHCE,IAAI,CAAC,IAAL,CAAU,CGDjB,GHCiB,AGDI,CHCJ,GAAA,AGDQ,CHCP,KAAK,EAAL,EGDO,CHCG,AGDH,MHCS,CAAC,AGDd,CAAa,CHCjB,AGDkB,CAAC,CHCM,CAAzB,IAA6B,CGDzB,EAAwB,CHCC,AGDA,CHCA,AGDC,GHCD,CAAC,GGD1B,CAArB,CHCoD,EAAL,GAAU,MAAM,CAAC,EAAlB,EAAyB,CAAzB,CAAvC,CAAP;AHcR,AGbK,AGDA,yCDkDoB,MAAW;ALnCpC,AKoCQ,UAAM,YAAY,GAAG,KAAK,QAAL,CAChB,KADgB,GAEhB,GAFgB,CAEZ,IAAI,CAAC,QAFO,CAArB;ALnCR,AKuCQ,UAAM,QAAQ,GAAG,YAAY,CAAC,SAAb,EAAjB;ALtCR,4BGdS,QGDW,GAAa;ANgBjC,AKsCQ,AFpDA,AGDA,UDqDG,CCrDE,EHCE,IAAI,CEoDA,IAAI,ECrDf,CHCO,CAAa,CGDC,IHCI,AGDA,EDqDV,AFpDR,CEoDQ,CFpDc,KAAK,CGDT,CHClB,AGDkB,CHCzB,MGDqB,CAAa,CAAC,CAAC,MDqDpC,CCrDqB,CDqDoB,CCrDI,CAAC,CAAC,OAA1B,CAArB;ANgBR,AKsCY,AFpDP,AGDA,aDqDY,qBAAL,CAA2B,GAA3B,CACI,YAAY,CAAC,MAAb,CAAoB,QAApB,CADJ;ALrCZ,AKwCS;ALvCT,AKwCK;ALvCL,2BG3Ee,SG2DE;ANiBjB,AG3EQ,AG2DA,WAAK,EH3DE,IAAI,OG2DX,CH3DO,CAAa,CAAb,AG2Dc,EH3DE,CAAhB,CAAP,CG2DA;ANiBR,AG3EK,AG2DG,WAAK,cAAL,GAAsB,KAAtB,ODuDgB,MAAW;ALtCnC,AKuCQ,ACvDA,WDuDK,ACvDA,aAAL,GAAqB,IDuDrB,CAA0B,GAA1B,CAA8B,CCvDT,CAAA,EDuDa,CAAC,ICvDd,CAAS,GDuD9B,CCvDqB,EAArB;ANiBR,AKuCK,ACvDA;ANiBL,0BG5Ec;AH6Ed,AG5EQ,aAAO,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,CAAP;AH6ER,AG5EK,oCEkHe,WAAiB;ALrCrC,AKsCQ,aAAO,KAAK,mBAAL,CACF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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LayerType;\n(function (LayerType) {\n    LayerType[LayerType[\"STATIC\"] = 0] = \"STATIC\";\n    LayerType[LayerType[\"DYNAMIC\"] = 1] = \"DYNAMIC\";\n})(LayerType = exports.LayerType || (exports.LayerType = {}));\nvar ResizeMethod;\n(function (ResizeMethod) {\n    ResizeMethod[ResizeMethod[\"FROM_ORIGIN\"] = 0] = \"FROM_ORIGIN\";\n    ResizeMethod[ResizeMethod[\"FROM_CENTER\"] = 1] = \"FROM_CENTER\";\n})(ResizeMethod = exports.ResizeMethod || (exports.ResizeMethod = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass Engine {\n    constructor() {\n        this.staticLayers = [];\n        this.dynamicLayers = [];\n        this.shouldRender = true;\n        this.lastFrameRenderedTime = null;\n        this.renderingId = null;\n        this.requestFrameA = this.requestFrameA.bind(this);\n        this.requestFrameB = this.requestFrameB.bind(this);\n    }\n    getLayer(layerIndex, layerType) {\n        if (layerType === types_1.LayerType.DYNAMIC) {\n            return this.dynamicLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n        else {\n            return this.staticLayers.find((layer) => layer.layerIndex === layerIndex) || null;\n        }\n    }\n    registerLayer(layer) {\n        if (layer.layerType === types_1.LayerType.DYNAMIC) {\n            this.dynamicLayers.push(layer);\n        }\n        else {\n            this.staticLayers.push(layer);\n        }\n    }\n    start() {\n        this.shouldRender = true;\n        this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n    }\n    stop() {\n        this.shouldRender = false;\n        if (this.renderingId) {\n            window.cancelAnimationFrame(this.renderingId);\n        }\n    }\n    requestFrameA(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameB);\n        }\n    }\n    requestFrameB(timestamp) {\n        this.render(timestamp);\n        if (this.shouldRender) {\n            this.renderingId = window.requestAnimationFrame(this.requestFrameA);\n        }\n    }\n    render(timestamp = 0) {\n        if (!this.lastFrameRenderedTime) {\n            this.lastFrameRenderedTime = timestamp;\n        }\n        const deltaTime = timestamp - this.lastFrameRenderedTime;\n        this.lastFrameRenderedTime = timestamp;\n        for (let i = 0; i < this.dynamicLayers.length; i++) {\n            this.dynamicLayers[i].update(deltaTime);\n            this.dynamicLayers[i].render();\n        }\n    }\n}\nexports.default = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"../types\");\nclass RenderingLayer {\n    constructor(layerIndex, layerType, initialWidth, initialHeight, initialX = 0, initialY = 0) {\n        this.layerIndex = layerIndex;\n        this.layerType = layerType;\n        this.entities = [];\n        this.width = initialWidth === undefined ? document.body.clientWidth + 1 : initialWidth;\n        this.height = initialHeight === undefined ? document.body.clientHeight + 1 : initialHeight;\n        this.x = initialX;\n        this.y = initialY;\n        const canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = `${this.layerIndex}`;\n        canvas.style.display = 'inline';\n        document.body.appendChild(canvas);\n        const context = canvas.getContext('2d');\n        if (!context) {\n            throw new Error('Could not initialize canvas 2D context.');\n        }\n        this.context = context;\n        this.context.translate(-0.5, -0.5);\n        this.resize(this.width, this.height);\n        this.setPosition(this.x, this.y);\n    }\n    resize(newWidth, newHeight, resizeMethod = types_1.ResizeMethod.FROM_ORIGIN) {\n        let xOffset = 0;\n        let yOffset = 0;\n        if (resizeMethod === types_1.ResizeMethod.FROM_CENTER) {\n            xOffset = (this.width - newWidth) / 2;\n            yOffset = (this.height - newHeight) / 2;\n        }\n        this.width = newWidth;\n        this.height = newHeight;\n        this.context.canvas.width = this.width;\n        this.context.canvas.height = this.height;\n        this.setPosition(this.x + xOffset, this.y + yOffset);\n    }\n    setPosition(newX, newY) {\n        this.x = newX;\n        this.y = newY;\n        if (!this._isLayerWithinBounds()) {\n            throw new Error('Cannot position and resize a layer outside of document body.');\n        }\n        this.context.canvas.style.left = `${this.x}px`;\n        this.context.canvas.style.top = `${this.y}px`;\n    }\n    addEntity(entity) {\n        if (!this._entityIsRenderable(entity)) {\n            throw new Error('All entities must have a render function.');\n        }\n        if (this.layerType === types_1.LayerType.DYNAMIC && !this._entityIsUpdatable(entity)) {\n            throw new Error('All entities of dynamic layers must have an updater function.');\n        }\n        this.entities.push(entity);\n    }\n    removeEntity(removeEntity) {\n        const renderersIdx = this.entities.indexOf(removeEntity);\n        if (renderersIdx !== -1) {\n            this.entities.splice(renderersIdx, 1);\n        }\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getX() {\n        return this.x;\n    }\n    getY() {\n        return this.y;\n    }\n    getContext() {\n        return this.context;\n    }\n    clear() {\n        this.context.clearRect(-1, -1, this.width, this.height);\n    }\n    update(deltaTime) {\n        if (this.layerType !== types_1.LayerType.DYNAMIC) {\n            return;\n        }\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].update(deltaTime);\n        }\n    }\n    render() {\n        this.clear();\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].render(this.context);\n        }\n    }\n    _entityIsRenderable(entity) {\n        return Boolean(entity.render);\n    }\n    _entityIsUpdatable(entity) {\n        return Boolean(entity.update);\n    }\n    _isLayerWithinBounds() {\n        return (this.width + this.x > document.body.clientWidth ||\n            this.height + this.y > document.body.clientHeight ||\n            this.x < 0 ||\n            this.y < 0);\n    }\n}\nexports.RenderingLayer = RenderingLayer;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Engine_1 = __importDefault(require(\"./Engine\"));\nvar RenderingLayer_1 = require(\"./RenderingLayer\");\nexports.RenderingLayer = RenderingLayer_1.RenderingLayer;\n__export(require(\"./types\"));\nexports.default = Engine_1.default;\n","\nexport const BIRD_COUNT = 500;\n\nexport const BIRD_WIDTH = 4;\nexport const BIRD_HEIGHT = 2;\nexport const BIRD_SPEED = 100 / 1000; // 60 pixels per 1000ms\nexport const BIRD_VISUAL_RANGE = 75;\nexport const BIRD_RETURN_VELOCITY = 0;\n\nexport const BIRD_SEPARATION_DISTANCE = 2*Math.sqrt(BIRD_WIDTH*BIRD_WIDTH + BIRD_HEIGHT*BIRD_HEIGHT); // x pixels before they move apart\nexport const BIRD_SEPARATION_EAGERNESS = 0.2;\nexport const BIRD_COHESION_EAGERNESS = 0.01; // Where 0 = Not Eager. 1 = Immediate change to coalesse\nexport const BIRD_ALIGNMENT_EAGERNESS = 0.1; // Where 0 = Not Eager. 1 = Immediate change.\n\nexport const SIGHT_ANGLE = Math.PI*0.5; // Almost 180 degree vision per eye.\nexport const SIGHT_RANGE = 50; // 50 pixels\n\nexport enum LayerIndex {\n    BACKGROUND,\n    BIRDS\n};","export default class Vector2D {\n\n    x1: number;\n    x2: number;\n\n    constructor(x1: number = 0, x2: number = 0) {\n        this.x1 = x1;\n        this.x2 = x2;\n    }\n\n    static ZERO() {\n        return new Vector2D(0, 0);\n    }\n\n    static ONE() {\n        return new Vector2D(1, 1);\n    }\n\n    static CONST_ZERO = Vector2D.ZERO();\n    static CONST_ONE = Vector2D.ONE();\n\n    null() {\n        this.x1 = 0;\n        this.x2 = 0;\n    }\n\n    add(vector: Vector2D) {\n        this.x1 += vector.x1;\n        this.x2 += vector.x2;\n        return this;\n    }\n    \n    sub(vector: Vector2D) {\n        this.x1 -= vector.x1;\n        this.x2 -= vector.x2;\n        return this;\n    }\n\n    multiply(scalar: number) {\n        this.x1 *= scalar;\n        this.x2 *= scalar;\n        return this;\n    }\n\n    divide(scalar: number) {\n        this.x1 /= scalar;\n        this.x2 /= scalar;\n        return this;\n    }\n\n    normalize() {\n        const mag = this.magnitude();\n        if(mag === 0) {\n            return Vector2D.ZERO();\n        }\n        return this.divide(mag);\n    }\n\n    magnitude() {\n        return Math.sqrt(this.x1 * this.x1 + this.x2 * this.x2);\n    }\n\n    distance(vector: Vector2D): number {\n        return Math.sqrt((this.x1 - vector.x1) ** 2 + (this.x2 - vector.x2) ** 2)\n    }\n\n    clone() {\n        return new Vector2D(this.x1, this.x2);\n    }\n}","import Vector2D from \"./Vector2D\";\n\n/**\n * @param degree A number between 0 and 360\n */\nexport const fromDegree = (degree: number) => {\n    return degree * Math.PI / 180;\n};\n\nexport const getAngle = (vector: Vector2D) => {\n    return Math.atan2(vector.x2, vector.x1);\n}\n\nexport const flipVector = (vector: Vector2D, plane: 'x' | 'y', direction: 'left' | 'right' | 'up' | 'down') => {\n    const angle = getAngle(vector);\n\n\n    let normal = 0;\n    if (plane === 'x' && direction === 'left') {\n        normal = 0;\n    } else if (plane === 'x' && direction === 'right') {\n        normal = Math.PI;\n    } else if (plane === 'y' && direction === 'up') {\n        normal = Math.PI*0.5;\n    } else if (plane === 'y' && direction === 'down') {\n        normal = Math.PI*1.5;\n    }\n    const newAngle = normal * 2 - Math.PI - angle;\n\n    vector.x1 = Math.cos(newAngle);\n    vector.x2 = Math.sin(newAngle);\n};","import { IEntity } from \"@zacktherrien/typescript-render-engine\";\n\nimport Vector2D from \"../Vector2D\";\n\nimport Boids from '../';\n\nimport { \n    BIRD_WIDTH, \n    BIRD_HEIGHT, \n    BIRD_SPEED, \n    BIRD_COHESION_EAGERNESS, \n    BIRD_SEPARATION_DISTANCE,\n    BIRD_SEPARATION_EAGERNESS,\n    BIRD_ALIGNMENT_EAGERNESS,\n    BIRD_VISUAL_RANGE,\n} from '../constants';\nimport { fromDegree, getAngle } from '../helpers';\n\nexport interface IBird extends IEntity {\n    position: Vector2D;\n    velocity: Vector2D;\n}\n\nexport default class Bird implements IBird {\n    \n    boids: Boids;\n    maxX: number;\n    maxY: number;\n\n    position: Vector2D;\n    velocity: Vector2D;\n    acceleration: Vector2D;\n\n    cohesionAccumulator: Vector2D;\n    separationAccumulator: Vector2D;\n    alignmentAccumulator: Vector2D;\n\n    // visibilityLeft: Vector2D;\n    // visibilityRight: Vector2D;\n\n    constructor(boids: Boids, initialX: number, initialY: number, maxX: number, maxY: number) {\n        this.boids = boids;\n\n        this.maxX = maxX;\n        this.maxY = maxY;\n\n        this.position = new Vector2D(initialX, initialY);\n        const randomAngle = fromDegree(Math.random() * 360);\n        this.velocity = new Vector2D(\n            Math.cos(randomAngle),\n            Math.sin(randomAngle)\n        )\n            .normalize()\n            .multiply(BIRD_SPEED);\n\n        this.acceleration = Vector2D.ZERO();\n\n        // this.visibilityLeft = new Vector2D(SIGHT_ANGLE - 0.01*Math.PI, SIGHT_RANGE);\n        // this.visibilityRight = new Vector2D(-SIGHT_ANGLE - 0.01*Math.PI, SIGHT_RANGE);\n\n        // Accumulators for performance\n        this.cohesionAccumulator = Vector2D.ZERO();\n        this.separationAccumulator = Vector2D.ZERO();\n        this.alignmentAccumulator = Vector2D.ZERO();\n    }\n\n    resetAccumulators() {\n        this.acceleration.null();\n\n        this.cohesionAccumulator.null();\n        this.separationAccumulator.null();\n        this.alignmentAccumulator.null();\n    }\n\n    /**\n     * Perform all maneuvers for this bird.\n     * @param birds The birds in range of this bird\n     */\n    performManeuvers(birds: Array<IBird>) {\n        this.resetAccumulators();\n\n        let perceivedBirdCount = 0;\n        for(let i = 0; i<birds.length; i++) {\n            if(birds[i] !== this && birds[i].position.distance(this.position) < BIRD_VISUAL_RANGE) {\n                perceivedBirdCount += 1;\n                this.accumulateCohesion(birds[i]);\n                this.accumulateSeparation(birds[i]);\n                this.accumulateAlignment(birds[i]);\n            }\n        }\n\n        // Flock mechanics\n        if(perceivedBirdCount !== 0) {\n            this.acceleration\n                .add(this.performCohesion(perceivedBirdCount))\n                .add(this.performSeparation(perceivedBirdCount))\n                .add(this.performAlignment(perceivedBirdCount));\n                // TODO: Limit acceleration.\n        }\n\n        // Goal seeking\n        // this.velocity\n        //     .add(this.checkGoals())\n        //     .add(this.checkPredators());\n        \n        this.checkBoundary();\n        this.checkVelocity();\n    }\n\n    accumulateCohesion(bird: IBird) {\n        this.cohesionAccumulator.add(bird.position);\n    }\n\n    accumulateSeparation(bird: IBird) {\n        const positionDiff = this.position\n            .clone()             // must clone because Vector2D is mutable\n            .sub(bird.position); // find the difference to the other bird\n\n        const distance = positionDiff.magnitude(); // find the distance\n        if(distance <= BIRD_SEPARATION_DISTANCE) {\n            this.separationAccumulator.add(     // add the force to our accumulator\n                positionDiff.divide(distance)\n            );\n        }\n    }\n\n    accumulateAlignment(bird: IBird) {\n        this.alignmentAccumulator.add(bird.velocity);\n    }\n\n    performCohesion(birdCount: number): Vector2D {\n        return this.cohesionAccumulator\n            .divide(birdCount)      // average position of other birds\n            .sub(this.position)     // how far away are they from this bird\n            .normalize()            // not normalizing means the average positions cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.velocity)     // subtract our velocity to get the force\n            .multiply(BIRD_COHESION_EAGERNESS); // change how fast birds want to coalesce\n    }\n\n    performSeparation(birdCount: number): Vector2D {\n        return this.separationAccumulator\n            .divide(birdCount)\n            .normalize()            // not normalizing means the average velocities cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.velocity)     // find the difference between the separation velocity and ours.\n            .multiply(BIRD_SEPARATION_EAGERNESS); // Change how fast birds want to align. 0 = No alignment, 1 = Immediate alignment.\n    }\n\n    performAlignment(birdCount: number): Vector2D {\n        return this.alignmentAccumulator\n            .divide(birdCount)      // average velocity of other birds\n            .normalize()            // not normalizing means the average velocities cancel out and the birds grind to a halt.\n            .multiply(BIRD_SPEED)   // \n            .sub(this.velocity)     // subtract our velocity to get the force\n            .multiply(BIRD_ALIGNMENT_EAGERNESS); // Change how fast birds want to align. 0 = No alignment, 1 = Immediate alignment.\n    }\n\n    checkPredators() {\n        if (this.boids.isRightClicked) {\n            return this.boids.mouseLocation\n                .clone()\n                .sub(this.position)\n                .divide(BIRD_COHESION_EAGERNESS)\n                .multiply(-1);\n        }\n        return Vector2D.CONST_ZERO;\n    }\n\n    checkGoals() {\n        if (this.boids.isLeftClicked) {\n            return this.boids.mouseLocation\n                .clone()\n                .sub(this.position)\n                .divide(BIRD_COHESION_EAGERNESS);\n        }\n        return Vector2D.CONST_ZERO;\n    }\n\n    checkBoundary() {\n        if(this.position.x1 < 0){\n            this.position.x1 = this.maxX\n        } else if(this.position.x1 > this.maxX){\n            this.position.x1 = 0;\n        }\n        if(this.position.x2 < 0){\n            this.position.x2 = this.maxY;\n        } else if(this.position.x2 > this.maxY){\n            this.position.x2 = 0;\n        }\n    }\n\n    checkVelocity() {\n        // limit velocity:\n        // if (this.velocity.magnitude() > BIRD_SPEED) {\n            this.velocity\n                .normalize()\n                .multiply(BIRD_SPEED);\n        // }\n    }\n\n    update(deltaTime: number) {\n        this.performManeuvers(this.boids.birds);\n\n        this.position.add(\n            this.velocity\n                .clone() // we must clone because multiply mutates the object.\n                .multiply(deltaTime)\n        );\n        this.velocity.add(this.acceleration);\n    }\n\n    render(context: CanvasRenderingContext2D) {\n        this.rotate(context);\n        context.strokeStyle = 'red';\n        context.beginPath();\n        context.moveTo(this.position.x1 + BIRD_WIDTH/2, this.position.x2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 + BIRD_HEIGHT/2);\n        context.lineTo(this.position.x1 - BIRD_WIDTH/2, this.position.x2 - BIRD_HEIGHT/2);\n        context.closePath();\n        context.stroke();\n\n        // context.strokeStyle = 'green';\n        // context.beginPath();\n        // context.arc(this.position.x1, this.position.x2, this.visibilityLeft.x2, this.visibilityLeft.x1, this.visibilityLeft.x1 - SIGHT_ANGLE, true);\n\n        // context.stroke();\n\n        // context.beginPath();\n        // context.arc(this.position.x1, this.position.x2, this.visibilityRight.x2, this.visibilityRight.x1, Math.PI, true);\n        // context.closePath();\n        // context.stroke();\n\n        \n        this.unrotate(context);\n    }\n\n    rotate(context: CanvasRenderingContext2D) {\n        // Move registration point to the center of the bird\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(getAngle(this.velocity));\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n\n    unrotate(context: CanvasRenderingContext2D) {\n        context.translate(this.position.x1, this.position.x2);\n        // Rotate degree\n        context.rotate(-getAngle(this.velocity));\n        // Move registration point back to the top left corner of canvas\n        context.translate(-this.position.x1, -this.position.x2);\n    }\n}","import Engine, { IEngine, RenderingLayer, LayerType, IRenderingLayer } from '@zacktherrien/typescript-render-engine';\n\nimport { LayerIndex, BIRD_COUNT } from './constants';\n\nimport Bird, { IBird, } from './Bird';\nimport Vector2D from './Vector2D';\n\nexport default class Boids {\n\n    engine: IEngine;\n    background: IRenderingLayer;\n\n    birdLayer: IRenderingLayer;\n    birds: Array<IBird>;\n\n    isLeftClicked: boolean;\n    isRightClicked: boolean;\n    mouseLocation: Vector2D;\n\n    constructor() {\n        this.background = new RenderingLayer(LayerIndex.BACKGROUND, LayerType.STATIC);\n        this.birdLayer = new RenderingLayer(LayerIndex.BIRDS, LayerType.DYNAMIC);\n\n        this.birds = [];\n        for(let i = 0; i<BIRD_COUNT; i++) {\n            // add a bird at a random location in our layer.\n            const bird = new Bird(\n                this,\n                Math.random() * this.birdLayer.getWidth(), \n                Math.random() * this.birdLayer.getHeight(),\n                this.birdLayer.getWidth(),\n                this.birdLayer.getHeight(),\n            );\n\n            this.birds.push(bird);\n            this.birdLayer.addEntity(bird);\n        }\n\n        this.isLeftClicked = false;\n        this.isRightClicked = false;\n        this.mouseLocation = Vector2D.ZERO();\n\n        this.engine = new Engine();\n\n        this.engine.registerLayer(this.background);\n        this.engine.registerLayer(this.birdLayer);\n        this.engine.start();\n\n        document.addEventListener('mousedown', this.handleMouseDown.bind(this));\n        document.addEventListener('mouseup', this.handleMouseUp.bind(this));\n        document.addEventListener('mousemove', this.handleMouseMove.bind(this));\n        document.addEventListener('contextmenu', event => event.preventDefault());\n    }\n\n    handleMouseDown(e: MouseEvent) {\n        if(e.button === 0) {\n            this.isLeftClicked = true;\n        } else {\n            this.isRightClicked = true;\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n        this.mouseLocation = new Vector2D(e.offsetX, e.offsetY);\n    }\n\n    handleMouseMove(e: MouseEvent) {\n        this.mouseLocation = new Vector2D(e.offsetX, e.offsetY);\n    }\n\n    handleMouseUp() {\n        this.isLeftClicked = false;\n        this.isRightClicked = false;\n        this.mouseLocation = Vector2D.ZERO();\n    }\n}","import Boids from './Boids';\n\nfunction load() {\n    const boids = new Boids();\n    // @ts-ignore\n    window.boids = boids;\n}\n\nwindow.addEventListener('load', load)"]}